idaapi._map___contains__(self, key)
idaapi._map___delitem__(self, key)
idaapi._map___getitem__(self, key)
idaapi._map___setitem__(self, key, value)
idaapi.a2funcoff(ea)
idaapi.accepts_udts(op)
idaapi.add_auto_stkpnt(ea, delta)
idaapi.add_auto_stkpnt2(pfn, ea, delta)
idaapi.add_bpt(bpt) -> bool
idaapi.add_bpt(ea, size, type)
idaapi.add_byte(ea, value)
idaapi.add_chooser_command(chooser_caption, cmd_caption, chooser_cb, menu_index=-1, icon=-1, flags=0)
idaapi.add_const(id, name, value, bmask=(bmask_t(-1)))
idaapi.add_cref(frm, to, type)
idaapi.add_custom_viewer_popup_item(custom_viewer, title, hotkey, custom_viewer_popup_item_callback)
idaapi.add_dref(frm, to, type)
idaapi.add_encoding(encoding)
idaapi.add_entry(ord, ea, name, makecode)
idaapi.add_enum(idx, name, flag)
idaapi.add_enum_member(id, name, value, bmask=(bmask_t(-1)))
idaapi.add_frame(pfn, frsize, frregs, argsize)
idaapi.add_func(ea1, ea2)
idaapi.add_func_ex(fn)
idaapi.add_hidden_area(ea1, ea2, description, header, footer, color)
idaapi.add_hotkey(hotkey, pyfunc)
idaapi.add_idc_class(name, super=None)
idaapi.add_idc_gvar(name)
idaapi.add_idc_hotkey(hotkey, idcfunc)
idaapi.add_long(ea, value)
idaapi.add_long_cmt(ea, isprev, format)
idaapi.add_menu_item(menupath, name, hotkey, flags, pyfunc, args)
idaapi.add_output_popup(n, c, u)
idaapi.add_pgm_cmt(format)
idaapi.add_qword(ea, value)
idaapi.add_regarg(pfn, reg, type, name)
idaapi.add_regarg2(pfn, reg, tif, name)
idaapi.add_regvar(pfn, ea1, ea2, canon, user, cmt)
idaapi.add_segm(para, start, end, name, sclass)
idaapi.add_segm_ex(s, name, sclass, flags)
idaapi.add_segment_translation(segstart, mappedseg)
idaapi.add_sourcefile(ea1, ea2, filename)
idaapi.add_spaces(str, bufsize, len)
idaapi.add_stkvar2(pfn, name, off, flags, ti, nbytes)
idaapi.add_stkvar3(py_op, py_v, flags)
idaapi.add_struc(idx, name, is_union=False)
idaapi.add_struc_member(sptr, fieldname, offset, flag, mt, nbytes)
idaapi.add_til(name)
idaapi.add_til2(name, flags)
idaapi.add_user_stkpnt(ea, delta)
idaapi.add_virt_module(mod)
idaapi.add_word(ea, value)
idaapi.addon_count()
idaapi.alignflag()
idaapi.alloc_type_ordinal(ti)
idaapi.alloc_type_ordinals(ti, qty)
idaapi.allocate_selector(segbase)
idaapi.analyze_area(sEA, eEA)
idaapi.analyzer_options()
idaapi.ansi2idb(name)
idaapi.appcall(func_ea, tid, py_type, py_fields, arg_list)
idaapi.append_argloc(out, vloc)
idaapi.append_cmt(ea, str, rptble)
idaapi.append_complex_n(type, n, is_empty)
idaapi.append_da(type, n1, n2)
idaapi.append_de(type, n)
idaapi.append_dt(type, n)
idaapi.append_func_tail(pfn, ea1, ea2)
idaapi.append_name(fields, name)
idaapi.append_struct_fields2(n, path, plen, flags, disp, delta, appzero)
idaapi.append_varloc(out, vloc)
idaapi.apply_callee_tinfo(caller, tif)
idaapi.apply_cdecl(ea, decl)
idaapi.apply_cdecl2(til, ea, decl, flags=0)
idaapi.apply_idasgn(advance)
idaapi.apply_idasgn_to(signame, ea, is_startup)
idaapi.apply_named_type(ea, name)
idaapi.apply_once_tinfo_and_name(dea, tif, name)
idaapi.apply_once_type_and_name(ea, type, name)
idaapi.apply_startup_sig(ea, startup)
idaapi.apply_tinfo(til, ea, type, fields, flags)
idaapi.apply_tinfo_to_stkarg(x, v, tif, name)
idaapi.apply_tinfo2(ea, tif, flags)
idaapi.apply_type(ti, py_type, py_fields, ea, flags)
idaapi.apply_type_to_stkarg(py_op, py_uv, py_type, name)
idaapi.apply_type2(ea, rtype, fields, userti)
idaapi.area_t_print(cb)
idaapi.arglocs_overlap(loc1, w1, loc2, w2)
idaapi.as_cstr(val)
idaapi.as_int32(v)
idaapi.as_signed(v, nbits=32)
idaapi.as_uint32(v)
idaapi.as_unicode(s)
idaapi.asciflag()
idaapi.asgop(cop)
idaapi.asgop_revert(cop)
idaapi.ask_for_feedback(format)
idaapi.ask_selector(selector)
idaapi.askaddr(defval, format)
idaapi.askbuttons_c(Yes, No, Cancel, deflt, format)
idaapi.askfile_c(savefile, defval, format)
idaapi.askfile2_c(forsave, defdir, filters, format)
idaapi.askfile2_cv(forsave, defdir, filters, format, va)
idaapi.askident(defval, format)
idaapi.asklong(defval, format)
idaapi.askqstr(str, format)
idaapi.askseg(defval, format)
idaapi.askstr(hist, defval, format)
idaapi.asktext(max_text, defval, prompt)
idaapi.AskUsingForm(*args)
idaapi.askyn_c(deflt, format)
idaapi.assemble(ea, cs, ip, use32, line)
idaapi.AssembleLine(ea, cs, ip, use32, line)
idaapi.attach_action_to_menu(menupath, name, flags)
idaapi.attach_action_to_popup(form, popup_handle, name, popuppath=None, flags=0) -> bool
idaapi.attach_action_to_popup(tcc, popup_handle, name, popuppath=None, flags=0)
idaapi.attach_action_to_toolbar(toolbar_name, name)
idaapi.attach_dynamic_action_to_popup(form, popup_handle, desc, popuppath=None, flags=0)
idaapi.attach_process(pid, event_id)
idaapi.auto_apply_type(caller, callee)
idaapi.auto_get(lowEA, highEA, type)
idaapi.auto_make_code(ea)
idaapi.auto_make_proc(ea)
idaapi.auto_mark_range(start, end, type)
idaapi.autoCancel(ea1, ea2)
idaapi.autoGetName(type)
idaapi.autoIsOk()
idaapi.autoMark(ea, type)
idaapi.autoStep()
idaapi.autoUnmark(start, end, type)
idaapi.autoWait()
idaapi.banner(wait)
idaapi.base2file(fp, pos, ea1, ea2)
idaapi.beep(beep_type=beep_default)
idaapi.begin_type_updating(utp)
idaapi.bin_search(startEA, endEA, image, mask, len, step, flags)
idaapi.binflag()
idaapi.bnot_data_flag()
idaapi.boundaries_begin(map)
idaapi.boundaries_clear(map)
idaapi.boundaries_end(map)
idaapi.boundaries_erase(map, p)
idaapi.boundaries_find(map, key)
idaapi.boundaries_first(p)
idaapi.boundaries_free(map)
idaapi.boundaries_insert(map, key, val)
idaapi.boundaries_next(p)
idaapi.boundaries_prev(p)
idaapi.boundaries_second(p)
idaapi.boundaries_size(map)
idaapi.bring_debugger_to_front()
idaapi.build_array_type(outtype, type, size)
idaapi.build_func_type(p_type, p_fields, fi)
idaapi.build_func_type2(ti, p_type, p_fields, fi)
idaapi.build_funcarg_info(til, type, fields, info, bfi_flags)
idaapi.build_stkvar_name(pfn, v)
idaapi.build_stkvar_xrefs(out, pfn, mptr)
idaapi.byteflag()
idaapi.bytesize(ea)
idaapi.calc_argloc_info(til, type, arglocs, maxn)
idaapi.calc_bg_color(ea)
idaapi.calc_c_cpp_name4(name, type, ccn_flags)
idaapi.calc_def_align(ea, mina, maxa)
idaapi.calc_default_idaplace_flags()
idaapi.calc_func_nargs(til, type)
idaapi.calc_idasgn_state(n)
idaapi.calc_idc_expr(where, line, rv)
idaapi.calc_max_align(endea)
idaapi.calc_max_children_qty(ea, tif, dont_deref_ptr=False)
idaapi.calc_max_item_end(ea, how=15)
idaapi.calc_max_number_of_children(ea, til, type, fields=None, dont_deref_ptr=False)
idaapi.calc_min_align(length)
idaapi.calc_number_of_children(loc, tif, dont_deref_ptr=False)
idaapi.calc_prefix_color(ea)
idaapi.calc_probable_base_by_value(ea, off)
idaapi.calc_reference_basevalue(frm, ri, opval, target)
idaapi.calc_reference_target(frm, ri, opval)
idaapi.calc_stkvar_struc_offset(pfn, ea, n)
idaapi.calc_switch_cases(insn_ea, py_swi)
idaapi.calc_switch_cases(insn_ea, si, casevec, targets) -> bool
idaapi.calc_target(frm, ea, n, opval)
idaapi.calc_thunk_func_target(fn, fptr)
idaapi.calc_type_size(ti, tp)
idaapi.calc_varloc_info(til, type, varlocs)
idaapi.calcexpr(where, line, rv)
idaapi.call_helper(rettype, args, format)
idaapi.call_idc_method(obj, name, nargs, args, result)
idaapi.call_nav_colorizer(col, ea, nbytes)
idaapi.call_script_method(obj, name, nargs, args, result)
idaapi.call_system(command)
idaapi.callregs_init_regs(_this, request)
idaapi.callregs_t_regcount(request)
idaapi.Calls AskUsingForm()
idaapi.Calls OpenForm()
idaapi.can_be_off32(ea)
idaapi.can_define_item(ea, length, flags)
idaapi.can_exc_continue(ev)
idaapi.cancel_exec_request(req_id)
idaapi.cblock_at(self, index)
idaapi.cblock_find(self, item)
idaapi.cblock_index(self, item)
idaapi.cblock_insert(self, index, item)
idaapi.cblock_iter(self)
idaapi.cblock_remove(self, item)
idaapi.cexpr_operands(self)
idaapi.cfg_get_cc_header_path(compid)
idaapi.cfg_get_cc_parm(compid, name)
idaapi.cfg_get_cc_predefined_macros(compid)
idaapi.cfunc_type(self)
idaapi.change_encoding_name(idx, encoding)
idaapi.change_segment_status(s, is_deb_segm)
idaapi.change_storage_type(startEA, endEA, stt)
idaapi.charflag()
idaapi.check_bpt(ea)
idaapi.check_process_exit(handle, exit_code, msecs=-1)
idaapi.check_skip_type(ti, ptr)
idaapi.check_type_trait(arg1)
idaapi.check_type_trait(arg1) -> bool
idaapi.choose_choose(self, flags, x0, y0, x1, y1, width, deflt, icon)
idaapi.choose_choose(self, flags, x0, y0, x1, y1, width, deflt, icon) -> uint32
idaapi.choose_enter(self, n)
idaapi.choose_entry(title)
idaapi.choose_enum(title, default_id)
idaapi.choose_enum_by_value(title, default_id, value, nbytes)
idaapi.choose_func(title, default_ea)
idaapi.choose_getl(self, n, buf)
idaapi.choose_idasgn()
idaapi.choose_local_tinfo(ti, title, func, ud)
idaapi.choose_local_type(ti, title, func, ud)
idaapi.choose_name(title)
idaapi.choose_named_type2(root_til, title, ntf_flags, func, sym)
idaapi.choose_segm(title, default_ea)
idaapi.choose_segreg(title)
idaapi.choose_sizer(self)
idaapi.choose_srcp(title)
idaapi.choose_stkvar_xref(pfn, mptr)
idaapi.choose_struc(title)
idaapi.choose_til()
idaapi.choose_trace_file()
idaapi.choose_xref(to)
idaapi.choose2_activate(self)
idaapi.choose2_add_command(self, caption, flags, menu_index, icon)
idaapi.choose2_close(self)
idaapi.choose2_create(self, embedded)
idaapi.choose2_find(title)
idaapi.choose2_get_embedded(self)
idaapi.choose2_get_embedded_selection(self)
idaapi.choose2_refresh(self)
idaapi.chunksize(ea)
idaapi.chunkstart(ea)
idaapi.cinsn_details(self)
idaapi.citem_to_specific_type(self)
idaapi.cleanup_appcall(tid)
idaapi.cleanup_varloc(vloc)
idaapi.clear_cached_cfuncs()
idaapi.clear_func_struct(fn)
idaapi.clear_requests_queue()
idaapi.clear_tinfo_t(_this)
idaapi.clear_trace()
idaapi.clearBreak()
idaapi.close_chooser(title)
idaapi.close_linput(li)
idaapi.close_pseudocode(f)
idaapi.close_tform(form, options)
idaapi.clr__bnot0(ea)
idaapi.clr__bnot1(ea)
idaapi.clr__invsign0(ea)
idaapi.clr__invsign1(ea)
idaapi.clr_abits(ea, bits)
idaapi.clr_align_flow(ea)
idaapi.clr_colored_item(ea)
idaapi.clr_fixed_spd(ea)
idaapi.clr_has_lname(ea)
idaapi.clr_has_ti(ea)
idaapi.clr_has_ti0(ea)
idaapi.clr_has_ti1(ea)
idaapi.clr_libitem(ea)
idaapi.clr_lzero(ea, n)
idaapi.clr_lzero0(ea)
idaapi.clr_lzero1(ea)
idaapi.clr_node_info2(gid, node, flags)
idaapi.clr_noret(ea)
idaapi.clr_notcode(ea)
idaapi.clr_retfp(ea)
idaapi.clr_terse_struc(ea)
idaapi.clr_tilcmt(ea)
idaapi.clr_usemodsp(ea)
idaapi.clr_usersp(ea)
idaapi.clr_userti(ea)
idaapi.clr_zstroff(ea)
idaapi.codeflag()
idaapi.codeSeg(addr, opnum)
idaapi.COLSTR(str, tag)
idaapi.compact_til(ti)
idaapi.compare(a, b)
idaapi.compare_tinfo(t1, t2, tcflags)
idaapi.compare_typsrc(s1, s2)
idaapi.Compile(file)
idaapi.compile_script_file(file)
idaapi.compile_script_func(name, current_ea, expr)
idaapi.CompileEx(file, del_macros)
idaapi.CompileLine(line)
idaapi.construct_macro(enable, build_macro)
idaapi.contains_fixups(ea, size)
idaapi.continue_process()
idaapi.convert_argloc_to_varloc(dst, src)
idaapi.convert_encoding(fromcode, tocode, indata, out, flags=0)
idaapi.convert_pt_flags_to_hti(pt_flags)
idaapi.convert_varloc_to_argloc(dst, src)
idaapi.copy_bits(v, s, e=-1)
idaapi.copy_srareas(dst_rg, src_rg, map_selector=False)
idaapi.copy_tinfo_t(_this, r)
idaapi.copy_varloc(dst, src)
idaapi.create_bytearray_linput(start, size)
idaapi.create_code_viewer(parent, custview, flags=0)
idaapi.create_custom_fixup(name)
idaapi.create_ea_viewer(title, parent, minplace, maxplace, curplace, y, ud, flags=0, fillloc=None, jumploc=None)
idaapi.create_field_name(type, offset=BADADDR)
idaapi.create_generic_linput(gl)
idaapi.create_generic_linput64(gl)
idaapi.create_helper(standalone, type, format)
idaapi.create_insn(ea)
idaapi.create_memory_linput(start, size)
idaapi.create_numbered_type_name(ord)
idaapi.create_numbered_type_reference(out, ord)
idaapi.create_source_viewer(parent, custview, sf, lines, lnnum, colnum, flags)
idaapi.create_switch_table(insn_ea, py_swi)
idaapi.create_switch_xrefs(insn_ea, py_swi)
idaapi.create_tform(caption, handle)
idaapi.create_tinfo(_this, bt, bt2, ptr)
idaapi.create_typedef(n) -> tinfo_t
idaapi.create_typedef(name)
idaapi.custflag()
idaapi.custfmtflag()
idaapi.dataSeg()
idaapi.dataSeg_op(opnum)
idaapi.dataSeg_opreg(opnum, rgnum)
idaapi.dbg_add_bpt_tev(tid, ea, bp)
idaapi.dbg_add_call_tev(tid, caller, callee)
idaapi.dbg_add_debug_event(event)
idaapi.dbg_add_insn_tev(tid, ea, save)
idaapi.dbg_add_many_tevs(new_tevs)
idaapi.dbg_add_ret_tev(tid, ret_insn, return_to)
idaapi.dbg_add_tev(type, tid, address)
idaapi.dbg_add_thread(tid)
idaapi.dbg_appcall(func_ea, tid, tif, argnum, argv, r)
idaapi.dbg_can_query()
idaapi.dbg_del_thread(tid)
idaapi.dbg_get_input_path()
idaapi.dbg_get_memory_info()
idaapi.dbg_get_name()
idaapi.dbg_get_registers()
idaapi.dbg_get_thread_sreg_base(py_tid, py_sreg_value)
idaapi.dbg_is_loaded()
idaapi.dbg_read_memory(py_ea, py_sz)
idaapi.dbg_write_memory(py_ea, py_buf)
idaapi.decflag()
idaapi.decode_insn(ea)
idaapi.decode_preceding_insn(ea)
idaapi.decode_prev_insn(ea)
idaapi.decompile(ea, hf=None)
idaapi.decompile_many(outfile, funcaddrs, flags)
idaapi.default_compiler()
idaapi.define_exception(code, name, desc, flags)
idaapi.del_absbase(ea)
idaapi.del_aflags(ea)
idaapi.del_alignment(ea)
idaapi.del_array_parameters(ea)
idaapi.del_bpt(bptloc) -> bool
idaapi.del_bpt(ea)
idaapi.del_bptgrp(name)
idaapi.del_const(id, value, serial, bmask)
idaapi.del_cref(frm, to, expand)
idaapi.del_custom_data_type_ids(ea)
idaapi.del_debug_names(ea1, ea2)
idaapi.del_dref(frm, to)
idaapi.del_encoding(idx)
idaapi.del_enum(id)
idaapi.del_enum_id(ea, n)
idaapi.del_enum_member(id, value, serial, bmask)
idaapi.del_extra_cmt(ea, what)
idaapi.del_fixup(source)
idaapi.del_frame(pfn)
idaapi.del_func(ea)
idaapi.del_func_cmt(fn, repeatable)
idaapi.del_global_name(ea)
idaapi.del_hidden_area(ea)
idaapi.del_hotkey(pyctx)
idaapi.del_idasgn(n)
idaapi.del_idc_hotkey(hotkey)
idaapi.del_ind_purged(ea)
idaapi.del_item_color(ea)
idaapi.del_jumptable_info(ea)
idaapi.del_local_name(ea)
idaapi.del_member_tinfo(sptr, mptr)
idaapi.del_menu_item(py_ctx)
idaapi.del_named_type(ti, name, ntf_flags)
idaapi.del_node_info2(gid, node)
idaapi.del_numbered_type(ti, ordinal)
idaapi.del_refinfo(ea, n)
idaapi.del_regvar(pfn, ea1, ea2, canon)
idaapi.del_segm(ea, flags)
idaapi.del_segment_cmt(s, repeatable)
idaapi.del_segment_translations(ea)
idaapi.del_selector(selector)
idaapi.del_source_linnum(ea)
idaapi.del_sourcefile(ea)
idaapi.del_srarea(rg, ea)
idaapi.del_stkpnt(pfn, ea)
idaapi.del_stroff_path(ea, n)
idaapi.del_struc(sptr)
idaapi.del_struc_member(sptr, offset)
idaapi.del_struc_members(sptr, off1, off2)
idaapi.del_switch_info_ex(ea)
idaapi.del_switch_parent(ea)
idaapi.del_til(name)
idaapi.del_tinfo_attr(tif, key)
idaapi.del_tinfo2(ea)
idaapi.del_tinfo2(ea, n)
idaapi.del_virt_module(base)
idaapi.delete_extra_cmts(ea, cmtidx)
idaapi.delete_unreferenced_stkvars(pfn)
idaapi.delete_wrong_stkvar_ops(pfn)
idaapi.delValue(ea)
idaapi.demangle_name(name, disable_mask)
idaapi.demangle_name2(name, disable_mask, demreq=DQT_FULL)
idaapi.deref_ptr(ti, type, ptr_ea, closure_obj=None)
idaapi.deref_ptr2(tif, ptr_ea, closure_obj=None)
idaapi.dereference(e, ptrsize, is_float=False)
idaapi.describe(ea, isprev, format)
idaapi.deserialize_tinfo(tif, til, ptype, pfields, pfldcmts)
idaapi.detach_action_from_menu(menupath, name)
idaapi.detach_action_from_popup(form, name)
idaapi.detach_action_from_toolbar(toolbar_name, name)
idaapi.detach_process()
idaapi.diff_trace_file(filename)
idaapi.disable_flags(startEA, endEA)
idaapi.disable_script_timeout()
idaapi.display_complex_call_chart(wait, title, ea1, ea2, flags, recursion_depth=-1)
idaapi.display_copyright_warning()
idaapi.display_flow_graph(title, pfn, ea1, ea2, print_names)
idaapi.display_gdl(fname)
idaapi.display_simple_call_chart(wait, title, ignore_libfuncs)
idaapi.do_data_ex(ea, dataflag, size, tid)
idaapi.do_name_anyway(ea, name, maxlen=0)
idaapi.do_unknown(ea, flags)
idaapi.do_unknown_range(ea, size, flags)
idaapi.do16bit(ea, length)
idaapi.do32bit(ea, length)
idaapi.do3byte(ea, length)
idaapi.doAlign(ea, length, alignment)
idaapi.doASCI(ea, length)
idaapi.doByte(ea, length)
idaapi.doCustomData(ea, length, dtid, fid)
idaapi.doDouble(ea, length)
idaapi.doDwrd(ea, length)
idaapi.doExtra(ea)
idaapi.doFloat(ea, length)
idaapi.doImmd(ea)
idaapi.doOwrd(ea, length)
idaapi.doPackReal(ea, length)
idaapi.doQwrd(ea, length)
idaapi.doStruct(ea, length, tid)
idaapi.dosysfile(complain_if_no_file, file)
idaapi.doTbyt(ea, length)
idaapi.doubleflag()
idaapi.doVar(ea, isvar=True)
idaapi.doWord(ea, length)
idaapi.doYwrd(ea, length)
idaapi.dstr_tinfo(tif)
idaapi.dto_copy_from_inf(arg1, inf)
idaapi.dto_copy_to_inf(arg1, inf)
idaapi.dto_init(dt, for_graph)
idaapi.dummy_ptrtype(ptrsize, isfp)
idaapi.dump_func_type_data(fti, praloc_bits)
idaapi.dwrdflag()
idaapi.ea_array_frompointer(t)
idaapi.ea_pointer_frompointer(t)
idaapi.ea_viewer_history_push_and_jump(v, ea, x, y, lnnum)
idaapi.eamap_begin(map)
idaapi.eamap_clear(map)
idaapi.eamap_end(map)
idaapi.eamap_erase(map, p)
idaapi.eamap_find(map, key)
idaapi.eamap_first(p)
idaapi.eamap_free(map)
idaapi.eamap_insert(map, key, val)
idaapi.eamap_next(p)
idaapi.eamap_prev(p)
idaapi.eamap_second(p)
idaapi.eamap_size(map)
idaapi.echsize(fp, size)
idaapi.echsize64(fp, size)
idaapi.eclose(fp)
idaapi.ecreate(file)
idaapi.ecreateT(file)
idaapi.edit_manual_regions()
idaapi.enable_bblk_trace(enable)
idaapi.enable_bpt(bptloc, enable) -> bool
idaapi.enable_bpt(ea, enable)
idaapi.enable_chooser_item_attrs(chooser_caption, enable)
idaapi.enable_extlang_python(enable)
idaapi.enable_flags(startEA, endEA, stt)
idaapi.enable_func_trace(enable)
idaapi.enable_insn_trace(enable)
idaapi.enable_manual_regions(enable)
idaapi.enable_menu_item(item_name, enable)
idaapi.enable_python_cli(enable)
idaapi.enable_step_trace(enable)
idaapi.encoding_from_strtype(strtype)
idaapi.end_type_updating(utp)
idaapi.enum_decode(code)
idaapi.enum_encode(id, serial)
idaapi.enum_import_names(mod_index, py_cb)
idaapi.enumerate_files(path, fname, callback)
idaapi.enumerate_system_files(subdir, fname, callback)
idaapi.enumflag()
idaapi.equal_bytes(ea, image, mask, len, sense_case)
idaapi.error(format)
idaapi.eseek(fp, pos)
idaapi.eseek64(fp, pos)
idaapi.execute(line)
idaapi.execute_sync(py_callable, reqf)
idaapi.execute_ui_requests(py_list)
idaapi.exit_process()
idaapi.expand_argv(p_argc, argc, argv)
idaapi.expand_struc(sptr, offset, delta, recalc=True)
idaapi.extend_sign(v, nbytes, sign_extend)
idaapi.extlang_call_method_exists()
idaapi.extlang_compile_file_exists(el=None)
idaapi.extlang_run_statements_exists(elang=None)
idaapi.extlang_set_attr_exists()
idaapi.extlang_unload_procmod(file)
idaapi.extract_and_convert_old_argloc(tp)
idaapi.extract_module_from_archive(filename, bufsize, is_remote, temp_file_ptr)
idaapi.extract_name(line, x)
idaapi.extract_name2(line, x)
idaapi.extract_old_argloc(ptr) -> argloc_old_t
idaapi.extract_old_argloc(ptr, p1, p2)
idaapi.extract_varloc(ptype, vloc, is_retval)
idaapi.ExtraFree(ea, start)
idaapi.f_any(arg1, arg2)
idaapi.f_has_dummy_name(f, arg2)
idaapi.f_has_name(f, arg2)
idaapi.f_has_user_name(F, arg2)
idaapi.f_hasRef(f, arg2)
idaapi.f_hasValue(f, arg2)
idaapi.f_is3byte(F, arg2)
idaapi.f_isAlign(F, arg2)
idaapi.f_isASCII(F, arg2)
idaapi.f_isByte(F, arg2)
idaapi.f_isCode(F, arg2)
idaapi.f_isCustom(F, arg2)
idaapi.f_isData(F, arg2)
idaapi.f_isDouble(F, arg2)
idaapi.f_isDwrd(F, arg2)
idaapi.f_isFloat(F, arg2)
idaapi.f_isHead(F, arg2)
idaapi.f_isNotTail(F, arg2)
idaapi.f_isOwrd(F, arg2)
idaapi.f_isPackReal(F, arg2)
idaapi.f_isQwrd(F, arg2)
idaapi.f_isStruct(F, arg2)
idaapi.f_isTail(F, arg2)
idaapi.f_isTbyt(F, arg2)
idaapi.f_isUnknown(F, arg2)
idaapi.f_isWord(F, arg2)
idaapi.f_isYwrd(F, arg2)
idaapi.file2base(li, pos, ea1, ea2, patchable)
idaapi.find_binary(startea, endea, ubinstr, radix, sflag)
idaapi.find_bpt(bptloc, bpt)
idaapi.find_byte(sEA, size, value, bin_search_flags)
idaapi.find_byter(sEA, size, value, bin_search_flags)
idaapi.find_code(ea, sflag)
idaapi.find_custom_data_format(name)
idaapi.find_custom_data_type(name)
idaapi.find_data(ea, sflag)
idaapi.find_defined(ea, sflag)
idaapi.find_error(ea, sflag)
idaapi.find_extlang_by_ext(ext)
idaapi.find_extlang_by_name(name)
idaapi.find_free_selector()
idaapi.find_func_bounds(ea, nfn, flags)
idaapi.find_idc_class(name)
idaapi.find_idc_gvar(name)
idaapi.find_imm(newEA, sflag, srchValue)
idaapi.find_not_func(ea, sflag)
idaapi.find_notype(ea, sflag)
idaapi.find_regvar(pfn, ea, canon) -> regvar_t
idaapi.find_regvar(pfn, ea1, ea2, canon, user)
idaapi.find_selector(base)
idaapi.find_text(startEA, y, x, ustr, sflag)
idaapi.find_tform(caption)
idaapi.find_tinfo_udt_member(typid, strmem_flags, udm)
idaapi.find_unknown(ea, sflag)
idaapi.find_void(ea, sflag)
idaapi.first_named_type(ti, ntf_flags)
idaapi.floatflag()
idaapi.fltflag()
idaapi.flush_buffers()
idaapi.fopenA(file)
idaapi.fopenM(file)
idaapi.fopenRB(file)
idaapi.fopenRT(file)
idaapi.fopenWB(file)
idaapi.fopenWT(file)
idaapi.for_all_arglocs(vv, vloc, size, off=0)
idaapi.for_all_const_arglocs(vv, vloc, size, off=0)
idaapi.for_all_const_varlocs(vv, vloc, size, off=0)
idaapi.for_all_consts(id, cv)
idaapi.for_all_enum_members(id, cv)
idaapi.for_all_types(ptype, tv)
idaapi.for_all_varlocs(vv, vloc, size, off=0)
idaapi.formchgcbfa_close(p_fa, close_normally)
idaapi.formchgcbfa_enable_field(p_fa, fid, enable)
idaapi.formchgcbfa_get_field_value(p_fa, fid, ft, sz)
idaapi.formchgcbfa_get_focused_field(p_fa)
idaapi.formchgcbfa_move_field(p_fa, fid, x, y, w, h)
idaapi.formchgcbfa_refresh_field(p_fa, fid)
idaapi.formchgcbfa_set_field_value(p_fa, fid, ft, py_val)
idaapi.formchgcbfa_set_focused_field(p_fa, fid)
idaapi.formchgcbfa_show_field(p_fa, fid, show)
idaapi.frame_off_args(pfn)
idaapi.frame_off_lvars(pfn)
idaapi.frame_off_retaddr(pfn)
idaapi.frame_off_savregs(pfn)
idaapi.free_argv(argc, argv)
idaapi.free_custom_icon(icon_id)
idaapi.free_til(ti)
idaapi.freechunk(bottom, size, step)
idaapi.func_contains(pfn, ea)
idaapi.func_does_return(callee)
idaapi.func_has_stkframe_hole(ea, fti)
idaapi.func_item_iterator_decode_preceding_insn(fii, visited, p_farref)
idaapi.func_item_iterator_decode_prev_insn(fii)
idaapi.func_item_iterator_next(fii, testf, ud)
idaapi.func_item_iterator_prev(fii, testf, ud)
idaapi.func_parent_iterator_set(fpi, pfn)
idaapi.func_parent_iterator_set2(fpi, pfn)
idaapi.func_setend(ea, newend)
idaapi.func_setstart(ea, newstart)
idaapi.func_tail_iterator_set(fti, pfn, ea)
idaapi.func_tail_iterator_set_ea(fti, ea)
idaapi.func_tail_iterator_set2(fti, pfn, ea)
idaapi.gen_abssym(ea, name)
idaapi.gen_cmt_line(format)
idaapi.gen_collapsed_line(format)
idaapi.gen_complex_call_chart(filename, wait, title, ea1, ea2, flags, recursion_depth=-1)
idaapi.gen_comvar(ea, name)
idaapi.gen_decorate_name3(name, mangle, cc)
idaapi.gen_disasm_text(ea1, ea2, text, truncate_lines)
idaapi.gen_exe_file(fp)
idaapi.gen_extern(ea, name)
idaapi.gen_file(otype, fp, ea1, ea2, flags)
idaapi.gen_fix_fixups(frm, to, size)
idaapi.gen_flow_graph(filename, title, pfn, ea1, ea2, gflags)
idaapi.gen_gdl(g, fname)
idaapi.gen_name_decl(ea, name)
idaapi.gen_simple_call_chart(filename, wait, title, gflags)
idaapi.gen_spcdef(ea, segtype)
idaapi.gen_use_arg_tinfos(caller, fti, rargs, set_optype, is_stkarg_load, has_delay_slot)
idaapi.generate_big_comment(cmt, color)
idaapi.generate_disasm_line(ea, flags=0)
idaapi.generate_disassembly(ea, max_lines, as_stack, notags)
idaapi.generate_many_lines(string, color)
idaapi.get_16bit(ea)
idaapi.get_32bit(ea)
idaapi.get_3byte(ea)
idaapi.get_64bit(ea)
idaapi.get_absbase(ea)
idaapi.get_action_checkable(name)
idaapi.get_action_checked(name)
idaapi.get_action_icon(name)
idaapi.get_action_label(name)
idaapi.get_action_shortcut(name)
idaapi.get_action_state(name)
idaapi.get_action_tooltip(name)
idaapi.get_action_visibility(name)
idaapi.get_addon_info(id, info)
idaapi.get_addon_info_idx(index, info)
idaapi.get_aflags(ea)
idaapi.get_alias_target(ti, ordinal)
idaapi.get_alignment(ea)
idaapi.get_argloc_r1(reg_argloc)
idaapi.get_argloc_r2(reg_argloc)
idaapi.get_array_parameters(ea, buf, bufsize)
idaapi.get_ascii_contents(ea, len, type)
idaapi.get_ascii_contents2(ea, len, type, flags=0x00000000)
idaapi.get_asm_inc_file()
idaapi.get_auto_plugins()
idaapi.get_base_type(t)
idaapi.get_basic_file_type(li)
idaapi.get_bblk_trace_options()
idaapi.get_best_fit_member(sptr, offset)
idaapi.get_bmask_cmt(id, bmask, repeatable)
idaapi.get_bmask_name(id, bmask)
idaapi.get_bmask_node(id, bmask)
idaapi.get_bpt(ea, bpt)
idaapi.get_bpt_group(bptloc)
idaapi.get_bpt_qty()
idaapi.get_bpt_tev_ea(n)
idaapi.get_bptloc_string(i)
idaapi.get_byte(ea)
idaapi.get_c_header_path()
idaapi.get_c_macros()
idaapi.get_call_tev_callee(n)
idaapi.get_chooser_obj(chooser_caption)
idaapi.get_cmt(ea, rptble)
idaapi.get_colored_demangled_name(ea, inhibitor, demform, gtn_flags=0)
idaapi.get_colored_demangled_name(frm, ea, inhibitor, demform, strict) -> char *
idaapi.get_colored_long_name(ea, gtn_flags=0)
idaapi.get_colored_name(ea)
idaapi.get_colored_name(frm, ea) -> char *
idaapi.get_colored_short_name(ea, gtn_flags=0)
idaapi.get_comp(comp)
idaapi.get_compiler_abbr(id)
idaapi.get_compiler_name(id)
idaapi.get_compilers(ids, names, abbrs)
idaapi.get_complex_n(ptype, is_empty_udt)
idaapi.get_const(id, value, serial, mask)
idaapi.get_const_bmask(id)
idaapi.get_const_by_name(name)
idaapi.get_const_cmt(id, repeatable)
idaapi.get_const_enum(id)
idaapi.get_const_name(id)
idaapi.get_const_serial(cid)
idaapi.get_const_value(id)
idaapi.get_ctype_name(op)
idaapi.get_curline()
idaapi.get_current_idasgn()
idaapi.get_current_tform()
idaapi.get_current_thread()
idaapi.get_current_viewer()
idaapi.get_cursor()
idaapi.get_custom_data_format(dtid, fid)
idaapi.get_custom_data_formats(out, dtid)
idaapi.get_custom_data_type(dtid)
idaapi.get_custom_data_type_ids(ea, cdis, bufsize)
idaapi.get_custom_data_types(out, min_size=0, max_size=BADADDR)
idaapi.get_custom_viewer_curline(custom_viewer, mouse)
idaapi.get_custom_viewer_place(custom_viewer, mouse)
idaapi.get_data_elsize(ea, F, ti=None)
idaapi.get_data_type_size(F, ti)
idaapi.get_data_value(ea, v, size)
idaapi.get_db_byte(ea)
idaapi.get_dbg_byte(ea, x)
idaapi.get_dbg_memory_info(areas)
idaapi.get_debug_event()
idaapi.get_debug_name_ea(name)
idaapi.get_debug_name2(ea_ptr, how)
idaapi.get_debug_names(ea1, ea2)
idaapi.get_debugger_event_cond()
idaapi.get_default_encoding_idx(strtype)
idaapi.get_default_reftype(ea)
idaapi.get_defsr(s, reg)
idaapi.get_demangled_name(ea, inhibitor, demform, gtn_flags=0)
idaapi.get_demangled_name(frm, ea, inhibitor, demform, strict) -> char *
idaapi.get_dtyp_by_size(size)
idaapi.get_dtyp_flag(dtype)
idaapi.get_dtyp_size(dtype)
idaapi.get_ea_name(ea, gtn_flags=0)
idaapi.get_ea_viewer_history_info(nback, nfwd, v)
idaapi.get_effective_spd(pfn, ea)
idaapi.get_encoding_name(idx)
idaapi.get_encodings_count()
idaapi.get_entry(ord)
idaapi.get_entry_name(ord)
idaapi.get_entry_ordinal(idx)
idaapi.get_entry_qty()
idaapi.get_enum(name)
idaapi.get_enum_base_type(type)
idaapi.get_enum_cmt(id, repeatable)
idaapi.get_enum_flag(id)
idaapi.get_enum_id(ea, n)
idaapi.get_enum_idx(id)
idaapi.get_enum_member(id, value, serial, mask)
idaapi.get_enum_member_bmask(id)
idaapi.get_enum_member_by_name(name)
idaapi.get_enum_member_cmt(id, repeatable)
idaapi.get_enum_member_enum(id)
idaapi.get_enum_member_expr2(tif, serial, value)
idaapi.get_enum_member_name(id)
idaapi.get_enum_member_serial(cid)
idaapi.get_enum_member_value(id)
idaapi.get_enum_name(id)
idaapi.get_enum_qty()
idaapi.get_enum_size(id)
idaapi.get_enum_type_ordinal(id)
idaapi.get_enum_width(id)
idaapi.get_event_bpt_hea(ev)
idaapi.get_event_exc_code(ev)
idaapi.get_event_exc_ea(ev)
idaapi.get_event_exc_info(ev)
idaapi.get_event_info(ev)
idaapi.get_event_module_base(ev)
idaapi.get_event_module_name(ev)
idaapi.get_event_module_size(ev)
idaapi.get_extlang_fileext()
idaapi.get_extra_cmt(ea, what)
idaapi.get_fchunk(ea)
idaapi.get_fchunk_num(ea)
idaapi.get_fchunk_qty()
idaapi.get_fchunk_referer(ea, idx)
idaapi.get_file_type_name()
idaapi.get_fileregion_ea(offset)
idaapi.get_fileregion_offset(ea)
idaapi.get_first_bmask(id)
idaapi.get_first_const(id, bmask=(bmask_t(-1)))
idaapi.get_first_cref_from(frm)
idaapi.get_first_cref_to(to)
idaapi.get_first_dref_from(frm)
idaapi.get_first_dref_to(to)
idaapi.get_first_enum_member(id, bmask=(bmask_t(-1)))
idaapi.get_first_fcref_from(frm)
idaapi.get_first_fcref_to(to)
idaapi.get_first_fixup_ea()
idaapi.get_first_free_extra_cmtidx(ea, start)
idaapi.get_first_module(modinfo)
idaapi.get_first_seg()
idaapi.get_first_serial_const(id, value, bmask)
idaapi.get_first_serial_enum_member(id, value, bmask)
idaapi.get_first_struc_idx()
idaapi.get_fixup(source, fd)
idaapi.get_fixup_base(source, fd)
idaapi.get_fixup_desc(source, fdp)
idaapi.get_fixup_extdef_ea(ea) -> ea_t
idaapi.get_fixup_extdef_ea(source, fd)
idaapi.get_fixup_segdef_sel(ea) -> sel_t
idaapi.get_fixup_segdef_sel(fd)
idaapi.get_flags_by_size(size)
idaapi.get_flags_ex(ea, how)
idaapi.get_flags_novalue(ea)
idaapi.get_float_type(width)
idaapi.get_forced_operand(ea, n)
idaapi.get_frame(ea) -> struc_t
idaapi.get_frame(pfn)
idaapi.get_frame_part(pfn, part, range)
idaapi.get_frame_retsize(pfn)
idaapi.get_frame_size(pfn)
idaapi.get_full_byte(ea)
idaapi.get_full_data_elsize(ea, F, ti=None)
idaapi.get_full_long(ea)
idaapi.get_full_type(t)
idaapi.get_full_word(ea)
idaapi.get_func(ea)
idaapi.get_func_bitness(pfn)
idaapi.get_func_bits(pfn)
idaapi.get_func_by_frame(frame_id)
idaapi.get_func_bytes(pfn)
idaapi.get_func_cc(til, p_type, p_fields=None)
idaapi.get_func_chunknum(pfn, ea)
idaapi.get_func_cmt(fn, repeatable)
idaapi.get_func_limits(pfn, limits)
idaapi.get_func_name(ea)
idaapi.get_func_name2(ea)
idaapi.get_func_nargs(type)
idaapi.get_func_num(ea)
idaapi.get_func_qty()
idaapi.get_func_rettype(til, type, fields, rettype, retfields=None, p_retloc=None, p_cc=None)
idaapi.get_func_trace_options()
idaapi.get_funcarg_size(til, pptr, lp=None)
idaapi.get_group_selector(grpsel)
idaapi.get_grp_bpts(bpts, grp_name)
idaapi.get_hexdump_ea(hexdump_num)
idaapi.get_hexrays_version()
idaapi.get_hidden_area(ea)
idaapi.get_hidden_area_num(ea)
idaapi.get_hidden_area_qty()
idaapi.get_highlighted_identifier(flags=0)
idaapi.get_idainfo_by_type(rtype, fields, psize, pflags, mt, alsize=None)
idaapi.get_idainfo_by_type2(til, ptype, fields, psize, pflags, mt, alsize=None)
idaapi.get_idainfo_by_type3(tif, psize, pflags, mt, alsize=None)
idaapi.get_idasgn_desc(n)
idaapi.get_idasgn_qty()
idaapi.get_idasgn_title(name)
idaapi.get_idc_filename(file)
idaapi.get_idcpath()
idaapi.get_idp_name()
idaapi.get_ids_modnode()
idaapi.get_imagebase()
idaapi.get_import_module_name(mod_index)
idaapi.get_import_module_qty()
idaapi.get_ind_purged(ea)
idaapi.get_inf_structure()
idaapi.get_input_file_path()
idaapi.get_insn_tev_reg_mem(n, memmap)
idaapi.get_insn_tev_reg_result(n, regname, regval)
idaapi.get_insn_tev_reg_val(n, regname, regval)
idaapi.get_insn_trace_options()
idaapi.get_int_type_by_width_and_sign(srcwidth, sign)
idaapi.get_item_color(ea)
idaapi.get_item_end(ea)
idaapi.get_item_flag(frm, n, ea, appzero)
idaapi.get_item_head(ea)
idaapi.get_item_size(ea)
idaapi.get_jumptable_info(ea, buf, bufsize)
idaapi.get_kernel_version()
idaapi.get_key_code(keyname)
idaapi.get_last_bmask(id)
idaapi.get_last_const(id, bmask=(bmask_t(-1)))
idaapi.get_last_enum_member(id, bmask=(bmask_t(-1)))
idaapi.get_last_seg()
idaapi.get_last_serial_const(id, value, bmask)
idaapi.get_last_serial_enum_member(id, value, bmask)
idaapi.get_last_struc_idx()
idaapi.get_linput_type(li)
idaapi.get_long(ea)
idaapi.get_long_name(ea, gtn_flags=0)
idaapi.get_long_queue_name(type)
idaapi.get_manual_insn(ea)
idaapi.get_manual_regions()
idaapi.get_many_bytes(ea, size)
idaapi.get_many_bytes_ex(ea, buf, size, mask)
idaapi.get_max_ascii_length(ea, strtype, options=0)
idaapi.get_max_offset(sptr)
idaapi.get_member(sptr, offset)
idaapi.get_member_by_fullname(fullname, sptr_place)
idaapi.get_member_by_id(mid, sptr_place)
idaapi.get_member_by_id(mid, sptr_place=None) -> member_t
idaapi.get_member_by_name(sptr, membername)
idaapi.get_member_cmt(mid, repeatable)
idaapi.get_member_fullname(mid)
idaapi.get_member_name(mid)
idaapi.get_member_name2(mid)
idaapi.get_member_size(mptr)
idaapi.get_member_struc(fullname)
idaapi.get_member_ti(mptr, buf, bufsize)
idaapi.get_member_tinfo(mptr, buf, fields)
idaapi.get_member_tinfo2(mptr, tif)
idaapi.get_member_type(mptr, type)
idaapi.get_min_spd_ea(pfn)
idaapi.get_name(frm, ea)
idaapi.get_name_base_ea(frm, to)
idaapi.get_name_color(frm, ea)
idaapi.get_name_ea(frm, name)
idaapi.get_name_expr(frm, n, ea, off, flags=0x0001)
idaapi.get_name_of_named_type(ptr)
idaapi.get_name_value(frm, name)
idaapi.get_named_type(til, name, ntf_flags)
idaapi.get_named_type64(til, name, ntf_flags)
idaapi.get_next_bmask(id, bmask)
idaapi.get_next_const(id, value, bmask=(bmask_t(-1)))
idaapi.get_next_cref_from(frm, current)
idaapi.get_next_cref_to(to, current)
idaapi.get_next_dref_from(frm, current)
idaapi.get_next_dref_to(to, current)
idaapi.get_next_enum_member(id, value, bmask=(bmask_t(-1)))
idaapi.get_next_fchunk(ea)
idaapi.get_next_fcref_from(frm, current)
idaapi.get_next_fcref_to(to, current)
idaapi.get_next_fixup_ea(ea)
idaapi.get_next_func(ea)
idaapi.get_next_func_addr(pfn, ea)
idaapi.get_next_hidden_area(ea)
idaapi.get_next_member_idx(sptr, off)
idaapi.get_next_module(modinfo)
idaapi.get_next_seg(ea)
idaapi.get_next_serial_const(first_cid)
idaapi.get_next_serial_enum_member(first_cid, in_out_serial)
idaapi.get_next_struc_idx(idx)
idaapi.get_nice_colored_name(ea, flags=0)
idaapi.get_nlist_ea(idx)
idaapi.get_nlist_idx(ea)
idaapi.get_nlist_name(idx)
idaapi.get_nlist_size()
idaapi.get_node_info(ea, node, pcolor, pea)
idaapi.get_node_info2(out, gid, node)
idaapi.get_numbered_type(ti, ordinal, type=None, fields=None, cmt=None, fieldcmts=None, sclass=None)
idaapi.get_numbered_type_name(ti, ordinal)
idaapi.get_offbase(ea, n)
idaapi.get_offset_expr(ea, n, ri, frm, offset, getn_flags=0)
idaapi.get_offset_expression(ea, n, frm, offset, getn_flags=0)
idaapi.get_op_signness(op)
idaapi.get_op_tinfo2(ea, n, tif)
idaapi.get_operand_immvals(ea, n, v)
idaapi.get_opinfo(ea, n, flags, buf)
idaapi.get_opnum()
idaapi.get_optype_flags0(F)
idaapi.get_optype_flags1(F)
idaapi.get_or_guess_member_tinfo(mptr, type, fields)
idaapi.get_or_guess_member_tinfo2(mptr, tif)
idaapi.get_or_guess_member_type(mptr, type, tsize)
idaapi.get_ordinal_from_idb_type(name, type)
idaapi.get_ordinal_qty(ti)
idaapi.get_original_byte(ea)
idaapi.get_original_long(ea)
idaapi.get_original_qword(ea)
idaapi.get_original_word(ea)
idaapi.get_output_curline(mouse)
idaapi.get_output_cursor()
idaapi.get_output_selected_text()
idaapi.get_plugin_options(plugin)
idaapi.get_prev_bmask(id, bmask)
idaapi.get_prev_const(id, value, bmask=(bmask_t(-1)))
idaapi.get_prev_enum_member(id, value, bmask=(bmask_t(-1)))
idaapi.get_prev_fchunk(ea)
idaapi.get_prev_fixup_ea(ea)
idaapi.get_prev_func(ea)
idaapi.get_prev_func_addr(pfn, ea)
idaapi.get_prev_hidden_area(ea)
idaapi.get_prev_member_idx(sptr, off)
idaapi.get_prev_seg(ea)
idaapi.get_prev_serial_const(first_cid)
idaapi.get_prev_serial_enum_member(first_cid, in_out_serial)
idaapi.get_prev_srarea(out, ea, rg)
idaapi.get_prev_struc_idx(idx)
idaapi.get_process_info(n, process_info)
idaapi.get_process_options(path, args, sdir, host, _pass, port)
idaapi.get_process_qty()
idaapi.get_process_state()
idaapi.get_ptr_object_size(til, type)
idaapi.get_qword(ea)
idaapi.get_referred_ordinal(ptype)
idaapi.get_refinfo(ea, n, ri)
idaapi.get_reftype_by_size(size)
idaapi.get_reg_info2(regname, bitrange)
idaapi.get_reg_name(reg, width, reghi=-1)
idaapi.get_reg_val(regname, regval)
idaapi.get_reg_vals(tid, clsmask, values)
idaapi.get_ret_tev_return(n)
idaapi.get_root_filename()
idaapi.get_running_notification()
idaapi.get_running_request()
idaapi.get_scattered_varloc(idx)
idaapi.get_screen_ea()
idaapi.get_segm_base(s)
idaapi.get_segm_by_name(name)
idaapi.get_segm_by_sel(selector)
idaapi.get_segm_class(s)
idaapi.get_segm_name(ea) -> ssize_t
idaapi.get_segm_name(s)
idaapi.get_segm_para(s)
idaapi.get_segm_qty()
idaapi.get_segment_alignment(align)
idaapi.get_segment_cmt(s, repeatable)
idaapi.get_segment_combination(comb)
idaapi.get_segment_translations(segstart, buf, bufsize)
idaapi.get_segreg(ea, rg)
idaapi.get_selector_qty()
idaapi.get_short_name(ea, gtn_flags=0)
idaapi.get_short_queue_name(type)
idaapi.get_sig_filename(signame)
idaapi.get_source_linnum(ea)
idaapi.get_sourcefile(ea, bounds=None)
idaapi.get_sp_delta(pfn, ea)
idaapi.get_spd(pfn, ea)
idaapi.get_special_folder(csidl)
idaapi.get_spoil_cnt(t)
idaapi.get_sptr(mptr)
idaapi.get_srarea(ea)
idaapi.get_srarea_num(rg, ea)
idaapi.get_srarea2(out, ea, rg)
idaapi.get_srareas_qty()
idaapi.get_srareas_qty2(rg)
idaapi.get_step_trace_options()
idaapi.get_stkarg_offset()
idaapi.get_stkvar(py_op, py_v)
idaapi.get_stock_tinfo(tif, id)
idaapi.get_str_encoding_idx(strtype)
idaapi.get_str_term1(strtype)
idaapi.get_str_term2(strtype)
idaapi.get_str_type_code(strtype)
idaapi.get_strlist_item(n, si)
idaapi.get_strlist_qty()
idaapi.get_strmem(til, type, fields, offset, delta, name, ftype=None, fnames=None, sname=None)
idaapi.get_strmem_by_name(til, type, fields, name, offset, ftype=None, fnames=None, sname=None)
idaapi.get_strmem2(til, type, fields, info)
idaapi.get_stroff_path(ea, n, path, delta)
idaapi.get_struc(id)
idaapi.get_struc_by_idx(idx)
idaapi.get_struc_cmt(id, repeatable)
idaapi.get_struc_first_offset(sptr)
idaapi.get_struc_id(name)
idaapi.get_struc_idx(id)
idaapi.get_struc_last_offset(sptr)
idaapi.get_struc_name(id)
idaapi.get_struc_next_offset(sptr, offset)
idaapi.get_struc_prev_offset(sptr, offset)
idaapi.get_struc_qty()
idaapi.get_struc_size(id) -> asize_t
idaapi.get_struc_size(sptr)
idaapi.get_switch_info_ex(ea)
idaapi.get_switch_parent(ea)
idaapi.get_tab_size(path)
idaapi.get_tev_ea(n)
idaapi.get_tev_event(n, d)
idaapi.get_tev_info(n, tev_info)
idaapi.get_tev_memory_info(n, mi)
idaapi.get_tev_qty()
idaapi.get_tev_reg_mem_ea(n, idx)
idaapi.get_tev_reg_mem_qty(n)
idaapi.get_tev_reg_val(n, regname)
idaapi.get_tev_tid(n)
idaapi.get_tev_type(n)
idaapi.get_tform_idaview(parent)
idaapi.get_tform_title(form)
idaapi.get_tform_type(form)
idaapi.get_tform_vdui(f)
idaapi.get_thread_qty()
idaapi.get_tilpath(tilbuf, tilbufsize)
idaapi.get_tinfo(ea, type, fields)
idaapi.get_tinfo_attr(typid, key, bv, all_attrs)
idaapi.get_tinfo_attrs(typid, tav, include_ref_attrs)
idaapi.get_tinfo_details(typid, bt2, buf)
idaapi.get_tinfo_pdata(typid, outptr, what)
idaapi.get_tinfo_property(typid, gta_prop)
idaapi.get_tinfo_size(typid, p_effalign, gts_code)
idaapi.get_tinfo2(ea, tif)
idaapi.get_trace_base_address()
idaapi.get_trace_file_desc(filename)
idaapi.get_trace_platform()
idaapi.get_true_name(ea)
idaapi.get_true_name(frm, ea) -> char *
idaapi.get_true_segm_name(s)
idaapi.get_type(id, tif, guess)
idaapi.get_type_flags(t)
idaapi.get_type_ordinal(ti, name)
idaapi.get_type_sign(til, type)
idaapi.get_type_size0(ti, tp)
idaapi.get_typeinfo(ea, n, flags, buf)
idaapi.get_unk_type(size)
idaapi.get_user_idadir()
idaapi.get_user_strlist_options(out)
idaapi.get_utf8_char(pptr)
idaapi.get_view_renderer_type(v)
idaapi.get_viewer_place_type(viewer)
idaapi.get_viewer_user_data(viewer)
idaapi.get_visible_name(ea, gtn_flags=0)
idaapi.get_word(ea)
idaapi.get_zero_areas(zareas, range)
idaapi.getDefaultRadix()
idaapi.getdspace(path)
idaapi.getFlags(ea)
idaapi.getn_bpt(n, bpt)
idaapi.getn_enum(n)
idaapi.getn_fchunk(n)
idaapi.getn_func(n)
idaapi.getn_hidden_area(n)
idaapi.getn_selector(n, sel, base)
idaapi.getn_srarea(n)
idaapi.getn_srarea2(out, rg, n)
idaapi.getn_thread(n)
idaapi.getnseg(n)
idaapi.getRadix(F, n)
idaapi.getRadixEA(ea, n)
idaapi.getseg(ea)
idaapi.getSR(ea, rg)
idaapi.getsysfile(filename, subdir)
idaapi.gettof(F)
idaapi.graph_trace()
idaapi.guess_func_cc(fti, npurged, cc_flags)
idaapi.guess_func_tinfo(pfn, type, fields)
idaapi.guess_func_tinfo2(pfn, tif)
idaapi.guess_table_address()
idaapi.guess_table_size(jump_table)
idaapi.guess_tinfo(id, type, fields)
idaapi.guess_tinfo2(id, tif)
idaapi.handle_debug_event(ev, rqflags)
idaapi.has_any_name(F)
idaapi.has_auto_name(F)
idaapi.has_cached_cfunc(ea)
idaapi.has_cmt(F)
idaapi.has_dummy_name(F)
idaapi.has_external_refs(pfn, ea)
idaapi.has_lname(ea)
idaapi.has_name(F)
idaapi.has_ti(ea)
idaapi.has_ti0(ea)
idaapi.has_ti1(ea)
idaapi.has_user_name(F)
idaapi.hasExtra(F)
idaapi.hasRef(F)
idaapi.hasValue(F)
idaapi.have_set_options(_dbg)
idaapi.hexflag()
idaapi.hide_all_bpts()
idaapi.hide_border(ea)
idaapi.hide_item(ea)
idaapi.hide_name(ea)
idaapi.hide_wait_box()
idaapi.idadir(subdir)
idaapi.IDAPython_ExecScript(script, g)
idaapi.IDAPython_ExecSystem(cmd)
idaapi.IDAPython_FormatExc(etype, value, tb, limit=None)
idaapi.IDAPython_LoadProcMod(script, g)
idaapi.IDAPython_UnLoadProcMod(script, g)
idaapi.idb2scr(name)
idaapi.idc_get_local_type(ordinal, flags, buf, maxsize)
idaapi.idc_get_local_type_name(ordinal)
idaapi.idc_get_local_type_raw(ordinal)
idaapi.idc_get_type(ea)
idaapi.idc_get_type_raw(ea)
idaapi.idc_guess_type(ea)
idaapi.idc_parse_decl(ti, decl, flags)
idaapi.idc_parse_types(input, flags)
idaapi.idc_print_type(py_type, py_fields, name, flags)
idaapi.idc_set_local_type(ordinal, dcl, flags)
idaapi.import_type(til, idx, name, flags=0)
idaapi.info(format)
idaapi.init_hexrays_plugin(flags=0)
idaapi.init_output_buffer(size=1024)
idaapi.init_process(lpi, errbuf)
idaapi.insert(self, p)
idaapi.insn_t_assign(self, other)
idaapi.insn_t_create()
idaapi.insn_t_destroy(py_obj)
idaapi.insn_t_get_auxpref(self)
idaapi.insn_t_get_canon_feature(itype)
idaapi.insn_t_get_canon_mnem(itype)
idaapi.insn_t_get_cs(self)
idaapi.insn_t_get_ea(self)
idaapi.insn_t_get_flags(self)
idaapi.insn_t_get_insnpref(self)
idaapi.insn_t_get_ip(self)
idaapi.insn_t_get_itype(self)
idaapi.insn_t_get_op_link(py_insn_lnk, i)
idaapi.insn_t_get_segpref(self)
idaapi.insn_t_get_size(self)
idaapi.insn_t_is_canon_insn(itype)
idaapi.insn_t_set_auxpref(self, value)
idaapi.insn_t_set_cs(self, value)
idaapi.insn_t_set_ea(self, value)
idaapi.insn_t_set_flags(self, value)
idaapi.insn_t_set_insnpref(self, value)
idaapi.insn_t_set_ip(self, value)
idaapi.insn_t_set_itype(self, value)
idaapi.insn_t_set_segpref(self, value)
idaapi.insn_t_set_size(self, value)
idaapi.install_command_interpreter(py_obj)
idaapi.install_extlang(el)
idaapi.install_hexrays_callback(hx_cblist_callback)
idaapi.InstrIsSet(icode, bit)
idaapi.int_pointer_frompointer(t)
idaapi.intel_data(ea)
idaapi.internal_get_sreg_base(tid, sreg_value)
idaapi.internal_ioctl(fn, buf, size, poutbuf, poutsize)
idaapi.invalidate_dbgmem_config()
idaapi.invalidate_dbgmem_contents(ea, size)
idaapi.is__bnot0(ea)
idaapi.is__bnot1(ea)
idaapi.is__invsign0(ea)
idaapi.is__invsign1(ea)
idaapi.is_action_enabled(s)
idaapi.is_additive(op)
idaapi.is_align_flow(ea)
idaapi.is_align_insn(ea)
idaapi.is_allowed_on_small_struni(op)
idaapi.is_anonymous_member_name(name)
idaapi.is_assignment(op)
idaapi.is_autosync(name, tif) -> bool
idaapi.is_autosync(name, type)
idaapi.is_basic_block_end(call_insn_stops_block)
idaapi.is_bblk_trace_enabled()
idaapi.is_bf(id)
idaapi.is_binary(op)
idaapi.is_bitop(op)
idaapi.is_bnot(ea, F, n)
idaapi.is_bnot_data(F)
idaapi.is_bool_type(type)
idaapi.is_break_consumer(op)
idaapi.is_call_insn(ea)
idaapi.is_castable2(til, frm, to)
idaapi.is_chooser_tform(t)
idaapi.is_code_far(cm)
idaapi.is_colored_item(ea)
idaapi.is_commutative(op)
idaapi.is_comp_unsure(comp)
idaapi.is_control_tty(fd)
idaapi.is_data_far(cm)
idaapi.is_debugger_busy()
idaapi.is_debugger_memory(ea)
idaapi.is_debugger_on()
idaapi.is_dummy_member_name(name)
idaapi.is_enum_fromtil(id)
idaapi.is_enum_hidden(id)
idaapi.is_finally_visible_func(pfn)
idaapi.is_finally_visible_item(ea)
idaapi.is_finally_visible_segm(s)
idaapi.is_fixed_spd(ea)
idaapi.is_forced_operand(ea, n)
idaapi.is_func_entry(pfn)
idaapi.is_func_locked(pfn)
idaapi.is_func_tail(pfn)
idaapi.is_func_trace_enabled()
idaapi.is_funcarg_off(pfn, frameoff)
idaapi.is_gcc()
idaapi.is_gcc32()
idaapi.is_gcc64()
idaapi.is_ghost_enum(id)
idaapi.is_hidden_border(ea)
idaapi.is_hidden_item(ea)
idaapi.is_idaq()
idaapi.is_ident_char(c)
idaapi.is_in_nlist(ea)
idaapi.is_indirect_jump_insn(ea)
idaapi.is_insn_trace_enabled()
idaapi.is_invsign(ea, F, n)
idaapi.is_libitem(ea)
idaapi.is_logical(op)
idaapi.is_loop(op)
idaapi.is_lvalue(op)
idaapi.is_lzero(ea, n)
idaapi.is_lzero0(ea)
idaapi.is_lzero1(ea)
idaapi.is_main_thread()
idaapi.is_manual_insn(ea)
idaapi.is_member_id(mid)
idaapi.is_miniidb()
idaapi.is_msg_inited()
idaapi.is_multiplicative(op)
idaapi.is_name_defined_locally(pfn, name, ignore, ea1=BADADDR, ea2=BADADDR)
idaapi.is_nonbool_type(type)
idaapi.is_noret(ea)
idaapi.is_noret_block(btype)
idaapi.is_notcode(ea)
idaapi.is_one_bit_mask(mask)
idaapi.is_ordinal_name(name, ord)
idaapi.is_paf(t)
idaapi.is_pascal(strtype)
idaapi.is_prepost(op)
idaapi.is_ptr_or_array(t)
idaapi.is_public_name(ea)
idaapi.is_purging_cc(cm)
idaapi.is_reg_argloc(argloc)
idaapi.is_reg_custom(regname)
idaapi.is_reg_float(regname)
idaapi.is_reg_integer(regname)
idaapi.is_reg2_argloc(reg_argloc)
idaapi.is_relational(op)
idaapi.is_resolved_type_struni(type)
idaapi.is_restype_array(til, type)
idaapi.is_restype_bitfld(til, type)
idaapi.is_restype_complex(til, type)
idaapi.is_restype_const(til, type)
idaapi.is_restype_enum(til, type)
idaapi.is_restype_floating(til, type)
idaapi.is_restype_func(til, type)
idaapi.is_restype_ptr(til, type)
idaapi.is_restype_struct(til, type)
idaapi.is_restype_struni(til, type)
idaapi.is_restype_union(til, type)
idaapi.is_restype_void(til, type)
idaapi.is_ret_block(btype)
idaapi.is_ret_insn(ea, strict=True)
idaapi.is_retfp(ea)
idaapi.is_same_data_type(F1, F2)
idaapi.is_sdacl_byte(t)
idaapi.is_segm_locked(segm)
idaapi.is_segreg_locked(arg1)
idaapi.is_signed_data(F)
idaapi.is_small_struni(tif)
idaapi.is_spec_ea(ea)
idaapi.is_spec_segm(seg_type)
idaapi.is_special_member(id)
idaapi.is_stack_argloc(argloc)
idaapi.is_step_trace_enabled()
idaapi.is_tah_byte(t)
idaapi.is_terse_struc(ea)
idaapi.is_tilcmt(ea)
idaapi.is_trusted_idb()
idaapi.is_type_arithmetic(t)
idaapi.is_type_array(t)
idaapi.is_type_bitfld(t)
idaapi.is_type_bool(t)
idaapi.is_type_char(t)
idaapi.is_type_complex(t)
idaapi.is_type_const(t)
idaapi.is_type_correct(ptr)
idaapi.is_type_double(t)
idaapi.is_type_enum(t)
idaapi.is_type_ext_arithmetic(t)
idaapi.is_type_ext_integral(t)
idaapi.is_type_float(t)
idaapi.is_type_floating(t)
idaapi.is_type_func(t)
idaapi.is_type_int(bt)
idaapi.is_type_int128(t)
idaapi.is_type_int16(t)
idaapi.is_type_int32(t)
idaapi.is_type_int64(t)
idaapi.is_type_integral(t)
idaapi.is_type_ldouble(t)
idaapi.is_type_only_size(t)
idaapi.is_type_paf(t)
idaapi.is_type_partial(t)
idaapi.is_type_ptr(t)
idaapi.is_type_ptr_or_array(t)
idaapi.is_type_resolvable(p, namebuf=None)
idaapi.is_type_scalar2(til, type)
idaapi.is_type_struct(t)
idaapi.is_type_struni(t)
idaapi.is_type_sue(t)
idaapi.is_type_typedef(t)
idaapi.is_type_uchar(t)
idaapi.is_type_uint(t)
idaapi.is_type_uint128(t)
idaapi.is_type_uint16(t)
idaapi.is_type_uint32(t)
idaapi.is_type_uint64(t)
idaapi.is_type_union(t)
idaapi.is_type_unk(t)
idaapi.is_type_unknown(t)
idaapi.is_type_void(t)
idaapi.is_type_void_obsolete(t)
idaapi.is_type_voiddef(t)
idaapi.is_type_volatile(t)
idaapi.is_typeid_last(t)
idaapi.is_uname(name)
idaapi.is_unary(op)
idaapi.is_unicode(strtype)
idaapi.is_union(id)
idaapi.is_user_cc(cm)
idaapi.is_usersp(ea)
idaapi.is_userti(ea)
idaapi.is_valid_full_type(ti, ptr)
idaapi.is_valid_trace_file(filename)
idaapi.is_valid_typename(name)
idaapi.is_vararg_cc(cm)
idaapi.is_varmember(mptr)
idaapi.is_varsize_item(ea, F, ti=None, itemsize=None)
idaapi.is_varstr(id)
idaapi.is_visible_char(c)
idaapi.is_visible_func(pfn)
idaapi.is_visible_item(ea)
idaapi.is_visible_segm(s)
idaapi.is_weak_name(ea)
idaapi.is_zstroff(ea)
idaapi.is3byte(F)
idaapi.isAlign(F)
idaapi.isASCII(F)
idaapi.isByte(F)
idaapi.isChar(F, n)
idaapi.isChar0(F)
idaapi.isChar1(F)
idaapi.isCode(F)
idaapi.isCustFmt(F, n)
idaapi.isCustFmt0(F)
idaapi.isCustFmt1(F)
idaapi.isCustom(F)
idaapi.isData(F)
idaapi.isDefArg(F, n)
idaapi.isDefArg0(F)
idaapi.isDefArg1(F)
idaapi.isDouble(F)
idaapi.isDwrd(F)
idaapi.isEnabled(ea)
idaapi.isEnum(F, n)
idaapi.isEnum0(F)
idaapi.isEnum1(F)
idaapi.isFloat(F)
idaapi.isFloat0(F)
idaapi.isFloat1(F)
idaapi.isFlow(F)
idaapi.isFltnum(F, n)
idaapi.isFop(F, n)
idaapi.isFop0(F)
idaapi.isFop1(F)
idaapi.isFunc(F)
idaapi.isHead(F)
idaapi.isident(name)
idaapi.isImmd(F)
idaapi.isLoaded(ea)
idaapi.isNotTail(F)
idaapi.isNum(F, n)
idaapi.isNum0(F)
idaapi.isNum1(F)
idaapi.isOff(F, n)
idaapi.isOff0(F)
idaapi.isOff1(F)
idaapi.isOwrd(F)
idaapi.isPackReal(F)
idaapi.isQwrd(F)
idaapi.isSeg(F, n)
idaapi.isSeg0(F)
idaapi.isSeg1(F)
idaapi.isStkvar(F, n)
idaapi.isStkvar0(F)
idaapi.isStkvar1(F)
idaapi.isStroff(F, n)
idaapi.isStroff0(F)
idaapi.isStroff1(F)
idaapi.isStruct(F)
idaapi.isTail(F)
idaapi.isTbyt(F)
idaapi.isUnknown(F)
idaapi.isVar(F)
idaapi.isVoid(ea, F, n)
idaapi.isWord(F)
idaapi.isYwrd(F)
idaapi.jumpto(custom_viewer, place, x, y) -> bool
idaapi.jumpto(ea, opnum=-1, uijmp_flags=0x0001)
idaapi.leading_zero_important(ea, n)
idaapi.lexcompare_tinfo(t1, t2, arg3)
idaapi.list_bptgrps() -> PyObject *
idaapi.list_bptgrps(bptgrps)
idaapi.lnot(e)
idaapi.load_and_run_plugin(name, arg)
idaapi.load_binary_file(filename, li, _neflags, fileoff, basepara, binoff, nbytes)
idaapi.load_custom_icon(file_name=None, data=None, format=None)
idaapi.load_dbg_dbginfo(path, li=None, base=BADADDR, verbose=False)
idaapi.load_debugger(dbgname, use_remote)
idaapi.load_ids_module(fname)
idaapi.load_loader_module(li, lname, fname, is_remote)
idaapi.load_plugin(name)
idaapi.load_til(tildir, name) -> til_t
idaapi.load_til(tildir, name, errbuf, bufsize)
idaapi.load_til_header(tildir, name) -> til_t
idaapi.load_til_header(tildir, name, errbuf, bufsize)
idaapi.load_trace_file(filename)
idaapi.loader_input_t_from_cobject(pycobject)
idaapi.loader_input_t_from_fp(fp)
idaapi.loader_input_t_from_linput(linput)
idaapi.lookup_key_code(key, shift, is_qt)
idaapi.lower_type(til, tif, name=None)
idaapi.lower_type2(til, tif, name=None, helper=None)
idaapi.lvar_mapping_begin(map)
idaapi.lvar_mapping_clear(map)
idaapi.lvar_mapping_end(map)
idaapi.lvar_mapping_erase(map, p)
idaapi.lvar_mapping_find(map, key)
idaapi.lvar_mapping_first(p)
idaapi.lvar_mapping_free(map)
idaapi.lvar_mapping_insert(map, key, val)
idaapi.lvar_mapping_next(p)
idaapi.lvar_mapping_prev(p)
idaapi.lvar_mapping_second(p)
idaapi.lvar_mapping_size(map)
idaapi.lvar_off(pfn, frameoff)
idaapi.make_array_type(buf, bufsize, type, size)
idaapi.make_ascii_string(start, len, strtype)
idaapi.make_name_auto(ea)
idaapi.make_name_non_public(ea)
idaapi.make_name_non_weak(ea)
idaapi.make_name_public(ea)
idaapi.make_name_user(ea)
idaapi.make_name_weak(ea)
idaapi.make_num(n, func=None, ea=BADADDR, opnum=0, sign=no_sign, size=0)
idaapi.make_old_argloc(r1, r2)
idaapi.make_pointer(type)
idaapi.make_ref(e)
idaapi.make_visible_name(srcname, dstsize)
idaapi.MakeBorder()
idaapi.MakeLine(contents, indent=-1)
idaapi.MakeNull()
idaapi.MakeSolidBorder()
idaapi.mark_cfunc_dirty(ea)
idaapi.may_create_stkvars()
idaapi.may_trace_sp()
idaapi.mem2base(py_mem, ea, fpos=-1)
idaapi.micro_err_format(code)
idaapi.move_bpt_to_grp(bpt, grp_name)
idaapi.move_segm(s, to, flags=0)
idaapi.move_segm_start(ea, newstart, mode)
idaapi.msg(o)
idaapi.nbits(ea)
idaapi.negated_relation(op)
idaapi.new_block()
idaapi.new_til(name, desc)
idaapi.next_head(ea, maxea)
idaapi.next_named_type(ti, name, ntf_flags)
idaapi.next_not_tail(ea)
idaapi.next_unknown(ea, maxea)
idaapi.nextaddr(ea)
idaapi.nextchunk(ea)
idaapi.nextthat(ea, maxea, callable)
idaapi.noExtra(ea)
idaapi.noImmd(ea)
idaapi.nomem(format)
idaapi.notify_when(when, py_callable)
idaapi.noType(ea, n)
idaapi.noUsed(ea)
idaapi.noUsed(sEA, eEA)
idaapi.numflag()
idaapi.octflag()
idaapi.offflag()
idaapi.op_adds_xrefs(F, n)
idaapi.op_bin(ea, n)
idaapi.op_chr(ea, n)
idaapi.op_custfmt(ea, n, fid)
idaapi.op_dec(ea, n)
idaapi.op_enum(ea, n, id, serial)
idaapi.op_flt(ea, n)
idaapi.op_hex(ea, n)
idaapi.op_num(ea, n)
idaapi.op_oct(ea, n)
idaapi.op_offset(ea, n, type, target=BADADDR, base=0, tdelta=0)
idaapi.op_offset_ex(ea, n, ri)
idaapi.op_seg(ea, n)
idaapi.op_stkvar(ea, n)
idaapi.op_stroff(ea, n, path, path_len, delta)
idaapi.op_t_assign(self, other)
idaapi.op_t_create()
idaapi.op_t_destroy(py_obj)
idaapi.op_t_get_addr(self)
idaapi.op_t_get_dtyp(self)
idaapi.op_t_get_flags(self)
idaapi.op_t_get_n(self)
idaapi.op_t_get_offb(self)
idaapi.op_t_get_offo(self)
idaapi.op_t_get_reg_phrase(self)
idaapi.op_t_get_specflag1(self)
idaapi.op_t_get_specflag2(self)
idaapi.op_t_get_specflag3(self)
idaapi.op_t_get_specflag4(self)
idaapi.op_t_get_specval(self)
idaapi.op_t_get_type(self)
idaapi.op_t_get_value(self)
idaapi.op_t_set_addr(self, value)
idaapi.op_t_set_dtyp(self, value)
idaapi.op_t_set_flags(self, value)
idaapi.op_t_set_n(self, value)
idaapi.op_t_set_offb(self, value)
idaapi.op_t_set_offo(self, value)
idaapi.op_t_set_reg_phrase(self, value)
idaapi.op_t_set_specflag1(self, value)
idaapi.op_t_set_specflag2(self, value)
idaapi.op_t_set_specflag3(self, value)
idaapi.op_t_set_specflag4(self, value)
idaapi.op_t_set_specval(self, value)
idaapi.op_t_set_type(self, value)
idaapi.op_t_set_value(self, value)
idaapi.op_uses_x(op)
idaapi.op_uses_y(op)
idaapi.op_uses_z(op)
idaapi.open_bpts_window(ea)
idaapi.open_calls_window(ea)
idaapi.open_disasm_window(window_title, ranges=None)
idaapi.open_enums_window(const_id=BADADDR)
idaapi.open_exports_window(ea)
idaapi.open_frame_window(pfn, offset)
idaapi.open_funcs_window(ea)
idaapi.open_hexdump_window(window_title)
idaapi.open_imports_window(ea)
idaapi.open_linput(file, remote)
idaapi.open_loctypes_window(ordinal)
idaapi.open_modules_window()
idaapi.open_names_window(ea)
idaapi.open_navband_window(ea, zoom)
idaapi.open_notepad_window()
idaapi.open_problems_window(ea)
idaapi.open_pseudocode(ea, new_window)
idaapi.open_segments_window(ea)
idaapi.open_segregs_window(ea)
idaapi.open_selectors_window()
idaapi.open_signatures_window()
idaapi.open_stack_window()
idaapi.open_strings_window(ea, selstart=BADADDR, selend=BADADDR)
idaapi.open_structs_window(id=BADADDR, offset=0)
idaapi.open_tform(form, options)
idaapi.open_threads_window()
idaapi.open_tils_window()
idaapi.open_trace_window()
idaapi.open_url(url)
idaapi.open_xrefs_window(ea)
idaapi.OpenForm(*args)
idaapi.openM(file)
idaapi.openR(file)
idaapi.openRT(file)
idaapi.optimize_argloc(vloc, size, gaps)
idaapi.optimize_varloc(vloc, size, gaps)
idaapi.out_addr_tag(ea)
idaapi.out_colored_register_line(str)
idaapi.out_keyword(str)
idaapi.out_line(str, color)
idaapi.out_long(v, radix)
idaapi.out_name_expr(py_op, ea, py_off)
idaapi.out_one_operand(n)
idaapi.out_register(str)
idaapi.out_symbol(c)
idaapi.out_tagoff(tag)
idaapi.out_tagon(tag)
idaapi.OutBadInstruction()
idaapi.OutChar(c)
idaapi.OutImmChar(x)
idaapi.OutLine(s)
idaapi.OutLong(Word, radix)
idaapi.OutMnem(width=8, postfix=None)
idaapi.OutValue(x, outflags=0)
idaapi.owrdflag()
idaapi.pack_idcobj_to_bv(obj, tif, bytes, objoff, pio_flags=0)
idaapi.pack_idcobj_to_idb(obj, tif, ea, pio_flags=0)
idaapi.pack_object_to_bv(py_obj, ti, py_type, py_fields, base_ea, pio_flags=0)
idaapi.pack_object_to_idb(py_obj, ti, py_type, py_fields, ea, pio_flags=0)
idaapi.packrealflag()
idaapi.parse_command_line3(cmdline)
idaapi.parse_dbgopts(ido, r_switch)
idaapi.parse_decl(til, decl, name, type, fields, flags)
idaapi.parse_decl2(til, decl, name, tif, flags)
idaapi.parse_decls(til, input, printer, hti_flags)
idaapi.parse_reg_name(regname, ri)
idaapi.parse_types2(input, printer, hti_flags)
idaapi.partial_type_num(type)
idaapi.patch_byte(ea, x)
idaapi.patch_long(ea, x)
idaapi.patch_many_bytes(ea, buf)
idaapi.patch_qword(ea, x)
idaapi.patch_word(ea, x)
idaapi.peek_auto_queue(low_ea, type)
idaapi.ph_get_cnbits()
idaapi.ph_get_dnbits()
idaapi.ph_get_flag()
idaapi.ph_get_high_fixup_bits()
idaapi.ph_get_icode_return()
idaapi.ph_get_id()
idaapi.ph_get_instruc()
idaapi.ph_get_instruc_end()
idaapi.ph_get_instruc_start()
idaapi.ph_get_operand_info(ea, n)
idaapi.ph_get_regCodeSreg()
idaapi.ph_get_regDataSreg()
idaapi.ph_get_regFirstSreg()
idaapi.ph_get_regLastSreg()
idaapi.ph_get_regnames()
idaapi.ph_get_segreg_size()
idaapi.ph_get_tbyte_size()
idaapi.ph_get_version()
idaapi.place_t_as_enumplace_t(p)
idaapi.place_t_as_idaplace_t(p)
idaapi.place_t_as_simpleline_place_t(p)
idaapi.place_t_as_structplace_t(p)
idaapi.plan_to_apply_idasgn(fname)
idaapi.plgform_close(py_link, options)
idaapi.plgform_new()
idaapi.plgform_show(py_link, py_obj, caption, options=FORM_TAB|FORM_MENU|FORM_RESTORE)
idaapi.prev_head(ea, minea)
idaapi.prev_not_tail(ea)
idaapi.prev_unknown(ea, minea)
idaapi.prevaddr(ea)
idaapi.prevchunk(ea)
idaapi.prevthat(ea, minea, callable)
idaapi.print_argloc(vloc, size=0, vflags=0)
idaapi.print_ascii_string_type(strtype)
idaapi.print_decls(printer, til, py_ordinals, flags)
idaapi.print_tinfo(prefix, indent, cmtindent, flags, tif, name, cmt)
idaapi.print_type(ea, one_line)
idaapi.print_type_to_qstring(prefix, indent, cmtindent, flags, ti, pt, name=None, cmt=None, field_names=None, field_cmts=None)
idaapi.print_type2(ea, prtype_flags)
idaapi.print_type3(ea, prtype_flags)
idaapi.print_varloc(vloc, size=0, vflags=0)
idaapi.print_vdloc(loc, w)
idaapi.printf_line(indent, format)
idaapi.process_ui_action(name, flags=0)
idaapi.property_op_to_typename(self)
idaapi.put_byte(ea, x)
idaapi.put_dbg_byte(ea, x)
idaapi.put_long(ea, x)
idaapi.put_many_bytes(ea, buf)
idaapi.put_qword(ea, x)
idaapi.put_word(ea, x)
idaapi.py_get_AskUsingForm()
idaapi.py_get_call_idc_func()
idaapi.py_get_global_cmd_link()
idaapi.py_get_OpenForm()
idaapi.py_load_custom_icon_data(data, format)
idaapi.py_load_custom_icon_fn(filename)
idaapi.py_menu_item_callback(userdata)
idaapi.py_register_compiled_form(py_form)
idaapi.py_set_idc_func_ex(name, fp_ptr, args, flags)
idaapi.py_unregister_compiled_form(py_form)
idaapi.pycim_get_tcustom_control(self)
idaapi.pycim_get_tform(self)
idaapi.pyg_add_command(self, title, hotkey)
idaapi.pyg_close(self)
idaapi.pyg_select_node(self, nid)
idaapi.pyg_show(self)
idaapi.pygc_create_groups(self, groups_infos)
idaapi.pygc_del_nodes_infos(self, py_nodes)
idaapi.pygc_delete_groups(self, groups, new_current)
idaapi.pygc_get_current_renderer_type(self)
idaapi.pygc_get_node_info(self, py_node_idx)
idaapi.pygc_refresh(self)
idaapi.pygc_set_current_renderer_type(self, py_rt)
idaapi.pygc_set_groups_visibility(self, groups, expand, new_current)
idaapi.pygc_set_node_info(self, py_node_idx, py_node_info, py_flags)
idaapi.pygc_set_nodes_infos(self, values)
idaapi.pyidag_bind(self)
idaapi.pyidag_unbind(self)
idaapi.pyscv_add_line(py_this, py_sl)
idaapi.pyscv_add_popup_menu(py_this, title, hotkey)
idaapi.pyscv_clear_lines(py_this)
idaapi.pyscv_clear_popup_menu(py_this)
idaapi.pyscv_close(py_this)
idaapi.pyscv_count(py_this)
idaapi.pyscv_del_line(py_this, nline)
idaapi.pyscv_delete(py_this)
idaapi.pyscv_edit_line(py_this, nline, py_sl)
idaapi.pyscv_get_current_line(py_this, mouse, notags)
idaapi.pyscv_get_current_word(py_this, mouse)
idaapi.pyscv_get_line(py_this, nline)
idaapi.pyscv_get_pos(py_this, mouse)
idaapi.pyscv_get_selection(py_this)
idaapi.pyscv_get_tcustom_control(py_this)
idaapi.pyscv_get_tform(py_this)
idaapi.pyscv_init(py_link, title)
idaapi.pyscv_insert_line(py_this, nline, py_sl)
idaapi.pyscv_is_focused(py_this)
idaapi.pyscv_jumpto(py_this, ln, x, y)
idaapi.pyscv_patch_line(py_this, nline, offs, value)
idaapi.pyscv_refresh(py_this)
idaapi.pyscv_refresh_current(py_this)
idaapi.pyscv_show(py_this)
idaapi.pyw_register_idc_func(name, args, py_fp)
idaapi.pyw_unregister_idc_func(ctxptr)
idaapi.qatoll(nptr)
idaapi.qcontrol_tty()
idaapi.qdetach_tty()
idaapi.qexit(code)
idaapi.qfile_t_from_cobject(pycobject)
idaapi.qfile_t_from_fp(fp)
idaapi.qfile_t_tmpfile()
idaapi.qfsize(fp)
idaapi.qfsize64(fp)
idaapi.qlgetz(li, fpos)
idaapi.qlgetz64(li, fpos)
idaapi.qlseek64(li, pos, whence=SEEK_SET)
idaapi.qlsize64(li)
idaapi.qltell64(li)
idaapi.qsplitpath(path, dir, file)
idaapi.qstrvec_t_add(self, s)
idaapi.qstrvec_t_addressof(self, idx)
idaapi.qstrvec_t_assign(self, other)
idaapi.qstrvec_t_clear(self, qclear)
idaapi.qstrvec_t_create()
idaapi.qstrvec_t_destroy(py_obj)
idaapi.qstrvec_t_from_list(self, py_list)
idaapi.qstrvec_t_get(self, idx)
idaapi.qstrvec_t_get_clink(self)
idaapi.qstrvec_t_get_clink_ptr(self)
idaapi.qstrvec_t_insert(self, idx, s)
idaapi.qstrvec_t_remove(self, idx)
idaapi.qstrvec_t_set(self, idx, s)
idaapi.qstrvec_t_size(self)
idaapi.qswap(a, b)
idaapi.QueueDel(type, ea)
idaapi.QueueGetMessage(t, ea)
idaapi.QueueGetType(type, lowea)
idaapi.QueueIsPresent(t, ea)
idaapi.QueueMark(type, ea)
idaapi.QueueSet(*args)
idaapi.QueueSet(type, ea, $ignore=None)
idaapi.quote_cmdline_arg(arg)
idaapi.qvector_reserve(vec, old, cnt, elsize)
idaapi.qwait_timed(child, status, flags, timeout_ms)
idaapi.qwrdflag()
idaapi.read_dbg_memory(ea, buffer, size)
idaapi.read_regargs(pfn)
idaapi.read_selection()
idaapi.read_tinfo_bitfield_value(typid, v, bitoff)
idaapi.readbytes(h, res, size, mf)
idaapi.readsel2(v, p1, p2)
idaapi.reanalyze_callers(ea, noret)
idaapi.reanalyze_function(pfn, ea1=0, ea2=BADADDR, analyze_parents=False)
idaapi.rebase_program(delta, flags)
idaapi.rebuild_nlist()
idaapi.recalc_spd(cur_ea)
idaapi.refresh_chooser(title)
idaapi.refresh_debugger_memory()
idaapi.refresh_idaview()
idaapi.refresh_idaview_anyway()
idaapi.refresh_lists()
idaapi.refresh_navband(force)
idaapi.refresh_strlist(ea1, ea2)
idaapi.reg_data_type(name, subkey=None)
idaapi.reg_delete(name, subkey=None)
idaapi.reg_delete_subkey(name)
idaapi.reg_exists(name, subkey=None)
idaapi.reg_flush()
idaapi.reg_load()
idaapi.reg_read_binary(name, subkey=None)
idaapi.reg_read_bool(name, defval, subkey=None)
idaapi.reg_read_int(name, defval, subkey=None)
idaapi.reg_read_string(name, subkey=None, _def=None)
idaapi.reg_read_strlist(subkey, list)
idaapi.reg_subkey_exists(name)
idaapi.reg_subkey_subkeys(name)
idaapi.reg_subkey_values(name)
idaapi.reg_update_filestrlist(subkey, add, maxrecs, rem=None)
idaapi.reg_update_strlist(subkey, add, maxrecs, rem=None, ignorecase=False)
idaapi.reg_write_binary(name, py_bytes, subkey=None)
idaapi.reg_write_bool(name, value, subkey=None)
idaapi.reg_write_int(name, value, subkey=None)
idaapi.reg_write_string(name, utf8, subkey=None)
idaapi.register_action(desc)
idaapi.register_addon(info)
idaapi.register_and_attach_to_menu(menupath, name, label, shortcut, flags, handler, owner)
idaapi.register_custom_data_format(dtid, py_df)
idaapi.register_custom_data_type(py_dt)
idaapi.register_data_types_and_formats(formats)
idaapi.register_timer(interval, py_callback)
idaapi.reload_file(file, is_remote)
idaapi.reloc_value(value, size, delta, mf)
idaapi.relocate_relobj(_relobj, ea, mf)
idaapi.remove_command_interpreter(cli_idx)
idaapi.remove_extlang(el)
idaapi.remove_func_tail(pfn, tail_ea)
idaapi.remove_hexrays_callback(hx_cblist_callback)
idaapi.remove_pointer(tif)
idaapi.remove_tinfo_pointer(til, tif, pname)
idaapi.remove_type_pointer(til, ptype, pname)
idaapi.rename_bptgrp(old_name, new_name)
idaapi.rename_entry(ord, name)
idaapi.rename_named_type(ti, frm, to, ntf_flags)
idaapi.rename_regvar(pfn, v, user)
idaapi.reorder_dummy_names()
idaapi.repaint_custom_viewer(custom_viewer)
idaapi.replace_subtypes(type, type_pairs)
idaapi.replace_subtypes2(ti, type, mapper)
idaapi.replace_tabs(str, tabsize)
idaapi.replace_wait_box(format)
idaapi.request_add_bpt(bpt) -> bool
idaapi.request_add_bpt(ea, size, type)
idaapi.request_attach_process(pid, event_id)
idaapi.request_clear_trace()
idaapi.request_continue_process()
idaapi.request_del_bpt(bptloc) -> bool
idaapi.request_del_bpt(ea)
idaapi.request_detach_process()
idaapi.request_enable_bblk_trace(enable)
idaapi.request_enable_bpt(bptloc, enable) -> bool
idaapi.request_enable_bpt(ea, enable)
idaapi.request_enable_func_trace(enable)
idaapi.request_enable_insn_trace(enable)
idaapi.request_enable_step_trace(enable)
idaapi.request_exit_process()
idaapi.request_refresh(mask)
idaapi.request_resume_thread(tid)
idaapi.request_run_to(ea)
idaapi.request_select_thread(tid)
idaapi.request_set_bblk_trace_options(options)
idaapi.request_set_func_trace_options(options)
idaapi.request_set_insn_trace_options(options)
idaapi.request_set_reg_val(regname, regval)
idaapi.request_set_resume_mode(tid, mode)
idaapi.request_set_step_trace_options(options)
idaapi.request_start_process(path, args, sdir)
idaapi.request_step_into()
idaapi.request_step_over()
idaapi.request_step_until_ret()
idaapi.request_suspend_process()
idaapi.request_suspend_thread(tid)
idaapi.require(modulename, package=None)
idaapi.requires_color_esc(c)
idaapi.resolve_complex_type2(til, ptype, fields, type_name, bt, N)
idaapi.resolve_typedef2(ti, p, fields=None, namebuf=None)
idaapi.restore_user_cmts(func_ea)
idaapi.restore_user_iflags(func_ea)
idaapi.restore_user_labels(func_ea)
idaapi.restore_user_lvar_settings(func_ea, ulv)
idaapi.restore_user_numforms(func_ea)
idaapi.restore_user_unions(func_ea)
idaapi.resume_thread(tid)
idaapi.retrieve_exceptions()
idaapi.retrieve_input_file_crc32()
idaapi.retrieve_input_file_md5(hash)
idaapi.retrieve_member_info(mptr, buf)
idaapi.revert_ida_decisions(ea1, ea2)
idaapi.run_plugin(plg, arg)
idaapi.run_requests()
idaapi.run_statements(str, elang=None)
idaapi.run_to(ea)
idaapi.save_database(outfile, delete_unpacked)
idaapi.save_database_ex(outfile, flags, root=None, attr=None)
idaapi.save_struc(sptr)
idaapi.save_struc2(sptr, may_update_ltypes=True)
idaapi.save_tinfo(til, ord, name, ntf_flags, tif)
idaapi.save_trace_file(filename, description)
idaapi.save_user_cmts(func_ea, user_cmts)
idaapi.save_user_iflags(func_ea, iflags)
idaapi.save_user_labels(func_ea, user_labels)
idaapi.save_user_lvar_settings(func_ea, ulv)
idaapi.save_user_numforms(func_ea, numforms)
idaapi.save_user_unions(func_ea, unions)
idaapi.score_tinfo(tif)
idaapi.scr2idb(name)
idaapi.search_down(sflag)
idaapi.See ua.hpp's construct_macro().
idaapi.segflag()
idaapi.segm_adjust_diff(s, delta)
idaapi.segm_adjust_ea(s, ea)
idaapi.segtype(ea)
idaapi.sel_array_frompointer(t)
idaapi.sel_pointer_frompointer(t)
idaapi.sel2ea(selector)
idaapi.select_extlang(el)
idaapi.select_thread(tid)
idaapi.send_database(err, silent)
idaapi.serialize_tinfo(type, fields, fldcmts, tif, sudt_flags)
idaapi.set__bnot0(ea)
idaapi.set__bnot1(ea)
idaapi.set__invsign0(ea)
idaapi.set__invsign1(ea)
idaapi.set_abits(ea, bits)
idaapi.set_absbase(ea, x)
idaapi.set_aflags(ea, flags)
idaapi.set_align_flow(ea)
idaapi.set_alignment(ea, x)
idaapi.set_array_parameters(ea, oi)
idaapi.set_asm_inc_file(file)
idaapi.set_auto_plugins(list, listsize=0)
idaapi.set_bblk_trace_options(options)
idaapi.set_bmask_cmt(id, bmask, cmt, repeatable)
idaapi.set_bmask_name(id, bmask, name)
idaapi.set_bpt_group(bpt, grp_name)
idaapi.set_bptloc_group(bptloc, grp_name)
idaapi.set_bptloc_string(s)
idaapi.set_c_header_path(incdir)
idaapi.set_c_macros(macros)
idaapi.set_cmt(ea, comm, rptble)
idaapi.set_code_viewer_handler(code_viewer, handler_id, handler_or_data)
idaapi.set_code_viewer_is_source(code_viewer)
idaapi.set_code_viewer_line_handlers(code_viewer, click_handler, popup_handler, dblclick_handler, drawicon_handler, linenum_handler)
idaapi.set_code_viewer_lines_alignment(code_viewer, align)
idaapi.set_code_viewer_lines_icon_margin(code_viewer, margin)
idaapi.set_code_viewer_lines_radix(code_viewer, radix)
idaapi.set_code_viewer_user_data(code_viewer, ud)
idaapi.set_colored_item(ea)
idaapi.set_compiler(cc, flags)
idaapi.set_compiler_id(id)
idaapi.set_complex_n(pt, val, is_empty_udt)
idaapi.set_const_cmt(id, cmt, repeatable)
idaapi.set_const_name(id, name)
idaapi.set_custom_data_type_ids(ea, cdis)
idaapi.set_custom_viewer_qt_aware(custom_viewer)
idaapi.set_dbg_default_options(keyword, value_type, value)
idaapi.set_dbg_options(_dbg, keyword, pri, value_type, value)
idaapi.set_dbg_options(keyword, pri, value_type, value) -> char const *
idaapi.set_debug_name(ea, name)
idaapi.set_debugger_event_cond(cond)
idaapi.set_debugger_options(options)
idaapi.set_default_dataseg(ds_sel)
idaapi.set_default_encoding_idx(strtype, idx)
idaapi.set_default_segreg_value(sg, rg, value)
idaapi.set_defsr(s, reg, value)
idaapi.set_dock_pos(src_ctrl, dest_ctrl, orient, left=0, top=0, right=0, bottom=0)
idaapi.set_dummy_name(frm, ea)
idaapi.set_enum_bf(id, bf)
idaapi.set_enum_cmt(id, cmt, repeatable)
idaapi.set_enum_fromtil(id, fromtil)
idaapi.set_enum_ghost(id, ghost)
idaapi.set_enum_hidden(id, hidden)
idaapi.set_enum_idx(id, idx)
idaapi.set_enum_member_cmt(id, cmt, repeatable)
idaapi.set_enum_member_name(id, name)
idaapi.set_enum_name(id, name)
idaapi.set_enum_type_ordinal(id, ord)
idaapi.set_enum_width(id, width)
idaapi.set_fixed_spd(ea)
idaapi.set_fixup(source, fp)
idaapi.set_fixup_ex(source, fd, offset_base)
idaapi.set_forced_operand(ea, n, op)
idaapi.set_frame_size(pfn, frsize, frregs, argsize)
idaapi.set_func_cmt(fn, cmt, repeatable)
idaapi.set_func_name_if_jumpfunc(fn, oldname)
idaapi.set_func_trace_options(options)
idaapi.set_group_selector(grp, sel)
idaapi.set_has_lname(ea)
idaapi.set_has_ti(ea)
idaapi.set_has_ti0(ea)
idaapi.set_has_ti1(ea)
idaapi.set_header_path(path, add)
idaapi.set_highlight_trace_options(hilight, color, diff)
idaapi.set_idc_func_ex(name, fp=None, args=(), flags=0)
idaapi.set_ids_modnode(id)
idaapi.set_imagebase(base)
idaapi.set_insn_trace_options(options)
idaapi.set_int_dbg_options(keyword, value)
idaapi.set_item_color(ea, color)
idaapi.set_jumptable_info(ea, oi)
idaapi.set_libitem(ea)
idaapi.set_lzero(ea, n)
idaapi.set_lzero0(ea)
idaapi.set_lzero1(ea)
idaapi.set_manual_insn(ea, manual_insn)
idaapi.set_member_cmt(mptr, cmt, repeatable)
idaapi.set_member_name(sptr, offset, name)
idaapi.set_member_ti(sptr, mptr, type, flags)
idaapi.set_member_tinfo(til, sptr, mptr, memoff, type, fields, flags)
idaapi.set_member_tinfo2(sptr, mptr, memoff, tif, flags)
idaapi.set_member_type(sptr, offset, flag, mt, nbytes)
idaapi.set_menu_item_icon(item_name, icon_id)
idaapi.set_name(ea, name) -> bool
idaapi.set_name(ea, name, flag)
idaapi.set_named_type64(ti, name, ntf_flags, ptr, fields=None, cmt=None, fieldcmts=None, sclass=None, value=None)
idaapi.set_nav_colorizer(new_py_colorizer)
idaapi.set_node_info(ea, node, pcolor, pea2, text)
idaapi.set_node_info2(gid, node, ni, flags)
idaapi.set_noret(ea)
idaapi.set_noret_insn(insn_ea, noret)
idaapi.set_notcode(ea)
idaapi.set_numbered_type(ti, ordinal, ntf_flags, name, type, fields=None, cmt=None, fldcmts=None, sclass=None)
idaapi.set_offset(ea, n, base)
idaapi.set_op_tinfo2(ea, n, tif)
idaapi.set_op_type(ea, type, n)
idaapi.set_opinfo(ea, n, flag, ti)
idaapi.set_process_options(path, args, sdir, host, _pass, port)
idaapi.set_process_state(newstate, p_thid, dbginv)
idaapi.set_processor_type(procname, level)
idaapi.set_purged(ea, nbytes, override_old_value)
idaapi.set_refinfo(ea, n, type, target=BADADDR, base=0, tdelta=0)
idaapi.set_refinfo_ex(ea, n, ri)
idaapi.set_reg_val(regname, regval)
idaapi.set_reg_val(tid, regidx, value) -> int
idaapi.set_regvar_cmt(pfn, v, cmt)
idaapi.set_remote_debugger(host, _pass, port=-1)
idaapi.set_resume_mode(tid, mode)
idaapi.set_retfp(ea)
idaapi.set_root_filename(file)
idaapi.set_scattered_varloc(ptr)
idaapi.set_script_timeout(timeout)
idaapi.set_segm_addressing(s, bitness)
idaapi.set_segm_base(s, newbase)
idaapi.set_segm_class(s, sclass)
idaapi.set_segm_end(ea, newend, flags)
idaapi.set_segm_name(s, format)
idaapi.set_segm_start(ea, newstart, flags)
idaapi.set_segment_cmt(s, cmt, repeatable)
idaapi.set_segment_translations(segstart, transmap)
idaapi.set_selector(selector, paragraph)
idaapi.set_source_linnum(ea, lnnum)
idaapi.set_spoils(pt, reg, size)
idaapi.set_sreg_at_next_code(ea1, ea2, rg, value)
idaapi.set_step_trace_options(options)
idaapi.set_strlist_options(options)
idaapi.set_stroff_path(ea, n, path, plen, delta)
idaapi.set_struc_align(sptr, shift)
idaapi.set_struc_cmt(id, cmt, repeatable)
idaapi.set_struc_hidden(sptr, is_hidden)
idaapi.set_struc_idx(sptr, idx)
idaapi.set_struc_listed(sptr, is_listed)
idaapi.set_struc_name(id, name)
idaapi.set_switch_info_ex(ea, py_swi)
idaapi.set_switch_parent(ea, x)
idaapi.set_tail_owner(fnt, func_start)
idaapi.set_target_assembler(asmnum)
idaapi.set_terse_struc(ea)
idaapi.set_tilcmt(ea)
idaapi.set_tinfo(ea, ti, fnames)
idaapi.set_tinfo_attr(tif, ta, may_overwrite)
idaapi.set_tinfo_attrs(tif, ta)
idaapi.set_tinfo_property(tif, sta_prop, x)
idaapi.set_tinfo2(ea, tif)
idaapi.set_trace_base_address(ea)
idaapi.set_trace_file_desc(filename, description)
idaapi.set_trace_platform(platform)
idaapi.set_trace_size(size)
idaapi.set_type(id, tif, source, force=False)
idaapi.set_type_alias(ti, src_ordinal, dst_ordinal)
idaapi.set_typeinfo(ea, n, flag, ti)
idaapi.set_usemodsp(ea)
idaapi.set_user_defined_prefix(width, pycb)
idaapi.set_usersp(ea)
idaapi.set_userti(ea)
idaapi.set_view_renderer_type(v, rt)
idaapi.set_visible_func(pfn, visible)
idaapi.set_visible_item(ea, visible)
idaapi.set_visible_segm(s, visible)
idaapi.set_zstroff(ea)
idaapi.setBreak()
idaapi.SetDefaultRegisterValue(sg, rg, value)
idaapi.setFlags(ea, flags)
idaapi.setStat(st)
idaapi.setup_selector(segbase)
idaapi.should_create_stkvars()
idaapi.should_trace_sp()
idaapi.show_name(ea)
idaapi.show_wait_box(format)
idaapi.showAddr(ea)
idaapi.showAllComments()
idaapi.showAuto(ea, type=AU_NONE)
idaapi.showComments()
idaapi.showRepeatables()
idaapi.signed_data_flag()
idaapi.sizeof_ldbl()
idaapi.skip_spoiled_info(ptr)
idaapi.skip_varloc(ptype, is_retval=False)
idaapi.split_old_argloc(al, r1, r2)
idaapi.split_srarea(ea, rg, v, tag, silent=False)
idaapi.splitSRarea1(ea, rg, v, tag, silent=False)
idaapi.start_process(path, args, sdir)
idaapi.std_gen_func_header(pfn)
idaapi.std_gen_segm_footer(ea)
idaapi.step_into()
idaapi.step_over()
idaapi.step_until_ret()
idaapi.stkvarflag()
idaapi.store_exceptions()
idaapi.store_til(ti, tildir, name)
idaapi.str2ea(str, screenEA=BADADDR)
idaapi.str2reg(p)
idaapi.str2regf(p)
idaapi.str2user(str)
idaapi.strarray(array, array_size, code)
idaapi.strlwr(s)
idaapi.stroff_as_size(plen, sptr, value)
idaapi.stroffflag()
idaapi.struct_unpack(buffer, signed=False, offs=0)
idaapi.struflag()
idaapi.strupr(s)
idaapi.suspend_process()
idaapi.suspend_thread(tid)
idaapi.sval_pointer_frompointer(t)
idaapi.switch_info_ex_t_assign(self, other)
idaapi.switch_info_ex_t_create()
idaapi.switch_info_ex_t_destroy(py_obj)
idaapi.switch_info_ex_t_get_custom(self)
idaapi.switch_info_ex_t_get_defjump(self)
idaapi.switch_info_ex_t_get_elbase(self)
idaapi.switch_info_ex_t_get_flags(self)
idaapi.switch_info_ex_t_get_flags2(self)
idaapi.switch_info_ex_t_get_ind_lowcase(self)
idaapi.switch_info_ex_t_get_jcases(self)
idaapi.switch_info_ex_t_get_jumps(self)
idaapi.switch_info_ex_t_get_ncases(self)
idaapi.switch_info_ex_t_get_regdtyp(self)
idaapi.switch_info_ex_t_get_regnum(self)
idaapi.switch_info_ex_t_get_startea(self)
idaapi.switch_info_ex_t_get_values_lowcase(self)
idaapi.switch_info_ex_t_set_custom(self, value)
idaapi.switch_info_ex_t_set_defjump(self, value)
idaapi.switch_info_ex_t_set_elbase(self, value)
idaapi.switch_info_ex_t_set_flags(self, value)
idaapi.switch_info_ex_t_set_flags2(self, value)
idaapi.switch_info_ex_t_set_ind_lowcase(self, value)
idaapi.switch_info_ex_t_set_jcases(self, value)
idaapi.switch_info_ex_t_set_jumps(self, value)
idaapi.switch_info_ex_t_set_ncases(self, value)
idaapi.switch_info_ex_t_set_regdtyp(self, value)
idaapi.switch_info_ex_t_set_regnum(self, value)
idaapi.switch_info_ex_t_set_startea(self, value)
idaapi.switch_info_ex_t_set_values_lowcase(self, value)
idaapi.switchto_tform(form, take_focus)
idaapi.tag_addr(ea)
idaapi.tag_advance(line, cnt)
idaapi.tag_remove(instr)
idaapi.tag_skipcode(line)
idaapi.tag_skipcodes(line)
idaapi.tag_strlen(line)
idaapi.take_memory_snapshot(only_loader_segs)
idaapi.tbytflag()
idaapi.term_hexrays_plugin()
idaapi.term_output_buffer()
idaapi.textctrl_info_t_assign(self, other)
idaapi.textctrl_info_t_create()
idaapi.textctrl_info_t_destroy(py_obj)
idaapi.textctrl_info_t_get_clink(self)
idaapi.textctrl_info_t_get_clink_ptr(self)
idaapi.textctrl_info_t_get_flags(self, flags)
idaapi.textctrl_info_t_get_tabsize(self, tabsize)
idaapi.textctrl_info_t_get_text(self)
idaapi.textctrl_info_t_set_flags(self, flags)
idaapi.textctrl_info_t_set_tabsize(self, tabsize)
idaapi.textctrl_info_t_set_text(self, s)
idaapi.tid_array_frompointer(t)
idaapi.til2idb(idx, name)
idaapi.tinfo_t_get_stock(id)
idaapi.toEA(reg_cs, reg_ip)
idaapi.toggle_bnot(ea, n)
idaapi.toggle_lzero(ea, n)
idaapi.toggle_sign(ea, n)
idaapi.tribyteflag()
idaapi.try_to_add_libfunc(ea)
idaapi.typeflag(ea, oldflag, type, n)
idaapi.ua_add_cref(opoff, to, type)
idaapi.ua_add_dref(opoff, to, type)
idaapi.ua_add_off_drefs(py_op, type)
idaapi.ua_add_off_drefs2(py_op, type, outf)
idaapi.ua_ana0(ea)
idaapi.ua_code(ea)
idaapi.ua_dodata(ea, dtype)
idaapi.ua_dodata2(opoff, ea, dtype)
idaapi.ua_mnem(ea)
idaapi.ua_next_byte()
idaapi.ua_next_long()
idaapi.ua_next_qword()
idaapi.ua_next_word()
idaapi.ua_outop(ea, n)
idaapi.ua_outop2(ea, n, flags=0)
idaapi.ua_stkvar2(x, v, flags)
idaapi.uchar_array_frompointer(t)
idaapi.ui_load_new_file(filename, li, neflags)
idaapi.ui_run_debugger(*args)
idaapi.ui_run_debugger(dbgopts, $ignore, argc, argv) -> bool
idaapi.umsg(o)
idaapi.unhide_border(ea)
idaapi.unhide_item(ea)
idaapi.unmark_selection()
idaapi.unpack_idcobj_from_bv(obj, tif, bytes, pio_flags=0)
idaapi.unpack_idcobj_from_idb(obj, tif, ea, off0, pio_flags=0)
idaapi.unpack_object_from_bv(ti, py_type, py_fields, py_bytes, pio_flags=0)
idaapi.unpack_object_from_idb(ti, py_type, py_fields, ea, pio_flags=0)
idaapi.unregister_action(name)
idaapi.unregister_custom_data_format(dtid, dfid)
idaapi.unregister_custom_data_type(dtid)
idaapi.unregister_data_types_and_formats(formats)
idaapi.unregister_timer(py_timerctx)
idaapi.update_action_checkable(name, checkable)
idaapi.update_action_checked(name, checked)
idaapi.update_action_icon(name, icon)
idaapi.update_action_label(name, label)
idaapi.update_action_shortcut(name, shortcut)
idaapi.update_action_state(name, state)
idaapi.update_action_tooltip(name, tooltip)
idaapi.update_action_visibility(name, visible)
idaapi.update_bpt(bpt)
idaapi.update_extra_cmt(ea, what, str)
idaapi.update_fpd(pfn, fpd)
idaapi.update_func(fn)
idaapi.update_hidden_area(ha)
idaapi.update_segm(s)
idaapi.user_cmts_begin(map)
idaapi.user_cmts_clear(map)
idaapi.user_cmts_end(map)
idaapi.user_cmts_erase(map, p)
idaapi.user_cmts_find(map, key)
idaapi.user_cmts_first(p)
idaapi.user_cmts_free(map)
idaapi.user_cmts_insert(map, key, val)
idaapi.user_cmts_next(p)
idaapi.user_cmts_prev(p)
idaapi.user_cmts_second(p)
idaapi.user_cmts_size(map)
idaapi.user_iflags_begin(map)
idaapi.user_iflags_clear(map)
idaapi.user_iflags_end(map)
idaapi.user_iflags_erase(map, p)
idaapi.user_iflags_find(map, key)
idaapi.user_iflags_first(p)
idaapi.user_iflags_free(map)
idaapi.user_iflags_insert(map, key, val)
idaapi.user_iflags_next(p)
idaapi.user_iflags_prev(p)
idaapi.user_iflags_second(p)
idaapi.user_iflags_size(map)
idaapi.user_labels_begin(map)
idaapi.user_labels_clear(map)
idaapi.user_labels_end(map)
idaapi.user_labels_erase(map, p)
idaapi.user_labels_find(map, key)
idaapi.user_labels_first(p)
idaapi.user_labels_free(map)
idaapi.user_labels_insert(map, key, val)
idaapi.user_labels_next(p)
idaapi.user_labels_prev(p)
idaapi.user_labels_second(p)
idaapi.user_labels_size(map)
idaapi.user_numforms_begin(map)
idaapi.user_numforms_clear(map)
idaapi.user_numforms_end(map)
idaapi.user_numforms_erase(map, p)
idaapi.user_numforms_find(map, key)
idaapi.user_numforms_first(p)
idaapi.user_numforms_free(map)
idaapi.user_numforms_insert(map, key, val)
idaapi.user_numforms_next(p)
idaapi.user_numforms_prev(p)
idaapi.user_numforms_second(p)
idaapi.user_numforms_size(map)
idaapi.user_unions_begin(map)
idaapi.user_unions_clear(map)
idaapi.user_unions_end(map)
idaapi.user_unions_erase(map, p)
idaapi.user_unions_find(map, key)
idaapi.user_unions_first(p)
idaapi.user_unions_free(map)
idaapi.user_unions_insert(map, key, val)
idaapi.user_unions_next(p)
idaapi.user_unions_prev(p)
idaapi.user_unions_second(p)
idaapi.user_unions_size(map)
idaapi.uses_modsp(ea)
idaapi.uval_array_frompointer(t)
idaapi.validate_idb_names()
idaapi.validate_name(name)
idaapi.validate_name2(name, bufsize)
idaapi.validate_name3(name)
idaapi.VarAssign(dst, src)
idaapi.VarCopy(dst, src)
idaapi.VarDelAttr(obj, attr)
idaapi.VarDeref(v, vref_flags)
idaapi.VarFirstAttr(obj)
idaapi.VarGetAttr(obj, attr, res, may_use_getattr=False)
idaapi.VarGetClassName(obj, name)
idaapi.VarGetSlice(v, i1, i2, res, flags=0)
idaapi.VarInt64(v)
idaapi.VarLastAttr(obj)
idaapi.VarMove(dst, src)
idaapi.VarNextAttr(obj, attr)
idaapi.VarObject(v, icls=None)
idaapi.VarPrevAttr(obj, attr)
idaapi.VarPrint(v, name=None, indent=0)
idaapi.VarRef(ref, v)
idaapi.VarSetAttr(obj, attr, value, may_use_setattr=False)
idaapi.VarSetSlice(v, i1, i2, _in, flags=0)
idaapi.VarString2(v)
idaapi.VarSwap(v1, v2)
idaapi.vaskqstr(str, format, va)
idaapi.vcall_helper(rettype, args, format, va)
idaapi.vcreate_helper(standalone, type, format, va)
idaapi.verify_argloc(vloc, size, gaps)
idaapi.verify_tinfo(typid)
idaapi.verify_varloc(vloc, size, gaps)
idaapi.vinterr(file, line, format, va)
idaapi.visit_patched_bytes(ea1, ea2, py_callable)
idaapi.visit_stroff_fields(sfv, path, plen, disp, appzero)
idaapi.visit_subtypes(visitor, out, tif, name, cmt)
idaapi.vumsg(format, va)
idaapi.wait_for_next_event(wfne, timeout_in_secs)
idaapi.warning(format)
idaapi.was_ida_decision(ea)
idaapi.wasBreak()
idaapi.wordflag()
idaapi.write_dbg_memory(ea, buffer, size)
idaapi.write_tinfo_bitfield_value(typid, dst, v, bitoff)
idaapi.writebytes(h, l, size, mf)
idaapi.xrefchar(xrtype)
idaapi.ywrdflag()